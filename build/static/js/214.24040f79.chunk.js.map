{"version":3,"file":"static/js/214.24040f79.chunk.js","mappings":"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","sources":["components/master-data/DocumentPreviewModal.js","components/master-data/VideoPreviewModal.js","hooks/useSharedMasterDataFilters.js","components/master-data/chapter/ChapterFilters.js","hooks/useMasterDataForm.js","utils/documentUtils.js","utils/youtubeUtils.js","components/master-data/chapter/ChapterForm.js","components/master-data/ChapterListCard.js","components/master-data/chapter/ChapterList.js","components/master-data/chapter/ChapterManagementNew.js","hooks/useApiCall.js"],"sourcesContent":["import React, { useEffect, useMemo, useRef, useState } from 'react';\nimport './DocumentPreviewModal.css';\n\nconst DocumentPreviewModal = ({ \n  isOpen, \n  onClose, \n  fileName, \n  filePath,\n  fileObject,\n  fileType = 'Document Preview' \n}) => {\n  const modalRef = useRef(null);\n  const serverBlobUrlRef = useRef(null);\n  const [isFullscreen, setIsFullscreen] = React.useState(false);\n  const [serverBlobUrl, setServerBlobUrl] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const handleEscape = (e) => {\n      if (e.key === 'Escape') {\n        if (isFullscreen) {\n          setIsFullscreen(false);\n        } else {\n          onClose();\n        }\n      }\n    };\n\n    const handleFullscreenToggle = (e) => {\n      // F11 or Ctrl+F for fullscreen toggle\n      if (e.key === 'F11' || (e.ctrlKey && e.key === 'f')) {\n        e.preventDefault();\n        toggleFullscreen();\n      }\n    };\n\n    const handleClickOutside = (e) => {\n      if (!isFullscreen && modalRef.current && !modalRef.current.contains(e.target)) {\n        onClose();\n      }\n    };\n\n    if (isOpen) {\n      document.addEventListener('keydown', handleEscape);\n      document.addEventListener('keydown', handleFullscreenToggle);\n      document.addEventListener('mousedown', handleClickOutside);\n      document.body.style.overflow = 'hidden';\n      \n      // Add CSS override to prevent global hover effects\n      const style = document.createElement('style');\n      style.id = 'document-modal-override';\n      style.textContent = `\n        body * {\n          transform: none !important;\n          transition: none !important;\n        }\n        body *:hover {\n          transform: none !important;\n          transition: none !important;\n        }\n      `;\n      document.head.appendChild(style);\n    }\n\n    return () => {\n      document.removeEventListener('keydown', handleEscape);\n      document.removeEventListener('keydown', handleFullscreenToggle);\n      document.removeEventListener('mousedown', handleClickOutside);\n      document.body.style.overflow = 'unset';\n      \n      // Remove CSS override\n      const existingStyle = document.getElementById('document-modal-override');\n      if (existingStyle) {\n        existingStyle.remove();\n      }\n    };\n  }, [isOpen, onClose, isFullscreen]);\n\n  // Fetch server file and create blob URL (same as data entry form)\n  useEffect(() => {\n    if (isOpen && fileName && filePath && !fileObject) {\n      const fetchServerFile = async () => {\n        setLoading(true);\n        setError(null);\n        \n        try {\n          // Construct the server URL\n          let serverUrl;\n          if (filePath.startsWith('/uploads/')) {\n            serverUrl = `http://localhost:8080${filePath}`;\n          } else if (filePath.startsWith('http://') || filePath.startsWith('https://')) {\n            serverUrl = filePath;\n          } else {\n            serverUrl = `http://localhost:8080${filePath}`;\n          }\n          \n          console.log('Fetching server file from:', serverUrl);\n          \n          // Fetch the file from server\n          const response = await fetch(serverUrl);\n          if (!response.ok) {\n            throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n          }\n          \n          // Create blob from response\n          const blob = await response.blob();\n          console.log('Server file fetched successfully, blob size:', blob.size);\n          \n          // Create blob URL (same as data entry form)\n          const blobUrl = URL.createObjectURL(blob);\n          \n          // Clean up previous blob URL if exists\n          if (serverBlobUrlRef.current) {\n            URL.revokeObjectURL(serverBlobUrlRef.current);\n          }\n          \n          serverBlobUrlRef.current = blobUrl;\n          setServerBlobUrl(blobUrl);\n          console.log('Created blob URL for server file:', blobUrl);\n          \n        } catch (err) {\n          console.error('Error fetching server file:', err);\n          setError(err.message);\n        } finally {\n          setLoading(false);\n        }\n      };\n      \n      fetchServerFile();\n    }\n    \n    // Cleanup blob URL when component unmounts or file changes\n    return () => {\n      if (serverBlobUrlRef.current) {\n        URL.revokeObjectURL(serverBlobUrlRef.current);\n        serverBlobUrlRef.current = null;\n        setServerBlobUrl(null);\n      }\n    };\n  }, [isOpen, fileName, filePath, fileObject]);\n\n  const toggleFullscreen = () => {\n    setIsFullscreen(!isFullscreen);\n  };\n\n  // Memoize the PDF URL to prevent re-creation on every render\n  const pdfUrl = useMemo(() => {\n    if (!fileName || !isOpen) return null;\n    \n    const extension = fileName.split('.').pop()?.toLowerCase();\n    console.log('DocumentPreviewModal - File details:', { fileName, extension, fileObject, filePath, serverBlobUrl });\n    \n    if (extension === 'pdf') {\n      // Priority 1: Use file object (from data entry form)\n      if (fileObject) {\n        console.log('Using file object for preview (data entry form)');\n        return URL.createObjectURL(fileObject);\n      }\n      \n      // Priority 2: Use server blob URL (from chapter list)\n      if (serverBlobUrl) {\n        console.log('Using server blob URL for preview (chapter list)');\n        return serverBlobUrl;\n      }\n      \n      // Priority 3: Direct server URL (fallback)\n      if (filePath) {\n        console.log('Using direct server URL for preview (fallback)');\n        if (filePath.startsWith('/uploads/')) {\n          return `http://localhost:8080${filePath}`;\n        } else if (filePath.startsWith('http://') || filePath.startsWith('https://')) {\n          return filePath;\n        } else {\n          return `http://localhost:8080${filePath}`;\n        }\n      }\n      \n      console.log('No file object, blob URL, or path available');\n      return null;\n    }\n    console.log('File is not PDF, extension:', extension);\n    return null;\n  }, [fileName, fileObject, filePath, serverBlobUrl, isOpen]);\n\n  // Cleanup object URL when component unmounts or file changes\n  useEffect(() => {\n    return () => {\n      if (pdfUrl && fileObject) {\n        URL.revokeObjectURL(pdfUrl);\n      }\n    };\n  }, [pdfUrl, fileObject]);\n\n  // Cleanup server blob URL when component unmounts\n  useEffect(() => {\n    return () => {\n      if (serverBlobUrlRef.current) {\n        URL.revokeObjectURL(serverBlobUrlRef.current);\n        serverBlobUrlRef.current = null;\n      }\n    };\n  }, []);\n\n  if (!isOpen) return null;\n\n  const renderPreview = () => {\n    if (!fileName) return null;\n\n    const extension = fileName.split('.').pop()?.toLowerCase();\n\n    if (extension === 'pdf') {\n      if (loading) {\n        return (\n          <div className=\"loading-preview\">\n            <div className=\"loading-spinner\">⏳</div>\n            <h3>Loading Document...</h3>\n            <p>Fetching file from server...</p>\n          </div>\n        );\n      }\n      \n      if (error) {\n        return (\n          <div className=\"error-preview\">\n            <div className=\"error-icon\">❌</div>\n            <h3>Error Loading Document</h3>\n            <p>{error}</p>\n            <div className=\"preview-actions\">\n              <button \n                className=\"btn btn-outline\"\n                onClick={() => {\n                  let testUrl;\n                  if (filePath && filePath.startsWith('/uploads/')) {\n                    testUrl = `http://localhost:8080${filePath}`;\n                  } else {\n                    testUrl = `http://localhost:8080/api/admin/master-data/chapters/files/${encodeURIComponent(fileName)}`;\n                  }\n                  window.open(testUrl, '_blank');\n                }}\n              >\n                🔗 Try Direct Link\n              </button>\n              <button \n                className=\"btn btn-primary\"\n                onClick={onClose}\n              >\n                Close\n              </button>\n            </div>\n          </div>\n        );\n      }\n      \n      if (pdfUrl) {\n        console.log('Rendering PDF iframe with URL:', pdfUrl);\n        console.log('Current window location:', window.location.href);\n        console.log('Expected backend URL should be on port 8080');\n        \n        // Enhanced PDF URL for better readability in fullscreen\n        const enhancedPdfUrl = `${pdfUrl}#toolbar=0&navpanes=0&scrollbar=0&statusbar=0&messages=0&scrollbar=0&view=FitH`;\n        \n        return (\n          <iframe\n            src={enhancedPdfUrl}\n            width=\"100%\"\n            height=\"100%\"\n            style={{ \n              border: \"none\",\n              backgroundColor: isFullscreen ? \"#ffffff\" : \"#f5f5f5\",\n              width: isFullscreen ? \"100vw\" : \"100%\",\n              height: isFullscreen ? \"calc(100vh - 80px)\" : \"100%\",\n              position: isFullscreen ? \"absolute\" : \"relative\",\n              top: isFullscreen ? \"0\" : \"auto\",\n              left: isFullscreen ? \"0\" : \"auto\"\n            }}\n            title={fileName}\n            key={pdfUrl} // Force re-render when URL changes\n            loading=\"lazy\"\n            onLoad={() => console.log('PDF iframe loaded successfully from:', enhancedPdfUrl)}\n            onError={(e) => console.error('PDF iframe failed to load from:', enhancedPdfUrl, 'Error:', e)}\n          />\n        );\n      } else {\n        // No preview available - show message with options\n        return (\n          <div className=\"no-preview-available\">\n            <div className=\"no-preview-icon\">📄</div>\n            <h3>Preview Not Available</h3>\n            <p>File preview is not available. Debug info:</p>\n            <div className=\"debug-info\">\n              <p><strong>File:</strong> {fileName}</p>\n              <p><strong>File Object:</strong> {fileObject ? 'Available' : 'Not available'}</p>\n              <p><strong>File Path:</strong> {filePath || 'Not available'}</p>\n              <p><strong>Server Blob:</strong> {serverBlobUrl ? 'Available' : 'Not available'}</p>\n              <p><strong>Extension:</strong> {extension}</p>\n            </div>\n            <div className=\"preview-options\">\n              <p>To preview this document, you can:</p>\n              <ul>\n                <li>📝 Edit the chapter and use the preview function in the form</li>\n                <li>💾 Download the file (if available on server)</li>\n                <li>🔄 Check browser console for detailed error logs</li>\n              </ul>\n            </div>\n            <div className=\"preview-actions\">\n              <button \n                className=\"btn btn-outline\"\n                onClick={() => {\n                  // Try to open the file in a new tab first\n                  let testUrl;\n                  if (filePath && filePath.startsWith('/uploads/')) {\n                    // Use the actual file path from API\n                    testUrl = `http://localhost:8080${filePath}`;\n                  } else {\n                    // Fallback to API endpoint\n                    testUrl = `http://localhost:8080/api/admin/master-data/chapters/files/${encodeURIComponent(fileName)}`;\n                  }\n                  console.log('Testing file URL in new tab:', testUrl);\n                  window.open(testUrl, '_blank');\n                }}\n              >\n                🔗 Test URL in New Tab\n              </button>\n              <button \n                className=\"btn btn-outline\"\n                onClick={() => {\n                  // Try to download the file\n                  let downloadUrl;\n                  if (filePath && filePath.startsWith('/uploads/')) {\n                    // Use the actual file path from API\n                    downloadUrl = `http://localhost:8080${filePath}`;\n                  } else {\n                    // Fallback to API endpoint\n                    downloadUrl = `http://localhost:8080/api/admin/master-data/chapters/files/${encodeURIComponent(fileName)}`;\n                  }\n                  console.log('Attempting download from URL:', downloadUrl);\n                  window.open(downloadUrl, '_blank');\n                }}\n              >\n                💾 Try Download\n              </button>\n              <button \n                className=\"btn btn-primary\"\n                onClick={onClose}\n              >\n                Close\n              </button>\n            </div>\n          </div>\n        );\n      }\n    }\n    \n    // For non-PDF files, show unsupported message\n    return (\n      <div className=\"unsupported-preview\">\n        <div className=\"unsupported-icon\">📄</div>\n        <h3>Preview Not Available</h3>\n        <p>Only PDF files are supported for preview.</p>\n        <p>File: <strong>{fileName}</strong></p>\n      </div>\n    );\n  };\n\n  return (\n    <div className={`document-preview-modal-overlay ${isFullscreen ? 'fullscreen' : ''}`}>\n      <div className={`document-preview-modal ${isFullscreen ? 'fullscreen' : ''}`} ref={modalRef}>\n        <div className=\"modal-header\">\n          <h3 className=\"modal-title\">{fileName || 'Document Preview'}</h3>\n          <div className=\"modal-controls\">\n            <button \n              className=\"modal-fullscreen-btn\"\n              onClick={toggleFullscreen}\n              aria-label={isFullscreen ? \"Exit fullscreen\" : \"Enter fullscreen\"}\n              title={isFullscreen ? \"Exit fullscreen (F11)\" : \"Enter fullscreen (F11)\"}\n            >\n              {isFullscreen ? '⤓' : '⤢'}\n            </button>\n            <button \n              className=\"modal-close-btn\"\n              onClick={onClose}\n              aria-label=\"Close document preview\"\n              title=\"Close (Esc)\"\n            >\n              <span>✕</span>\n            </button>\n          </div>\n        </div>\n        \n        <div className=\"modal-content\">\n          <div className=\"document-container\">\n            {renderPreview()}\n          </div>\n          \n          <div className=\"modal-actions\">\n            <button \n              className=\"btn btn-secondary\"\n              onClick={toggleFullscreen}\n            >\n              {isFullscreen ? 'Minimize' : 'Fullscreen'}\n            </button>\n            <button \n              className=\"btn btn-primary\"\n              onClick={onClose}\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DocumentPreviewModal;\n","import React, { useEffect, useRef } from 'react';\n\nconst VideoPreviewModal = ({ \n  isOpen, \n  onClose, \n  embedUrl, \n  watchUrl, \n  videoTitle = 'Video Preview' \n}) => {\n  const modalRef = useRef(null);\n  const iframeRef = useRef(null);\n\n  useEffect(() => {\n    if (isOpen) {\n      // Disable body scroll\n      document.body.style.overflow = 'hidden';\n      \n      // Add CSS override to prevent global hover effects\n      const style = document.createElement('style');\n      style.id = 'video-modal-override';\n      style.textContent = `\n        body * {\n          transform: none !important;\n          transition: none !important;\n        }\n        body *:hover {\n          transform: none !important;\n          transition: none !important;\n        }\n      `;\n      document.head.appendChild(style);\n      \n      // Set iframe source\n      if (iframeRef.current && embedUrl) {\n        iframeRef.current.src = embedUrl;\n      }\n    } else {\n      // Re-enable body scroll\n      document.body.style.overflow = '';\n      \n      // Remove CSS override\n      const existingStyle = document.getElementById('video-modal-override');\n      if (existingStyle) {\n        existingStyle.remove();\n      }\n      \n      // Clear iframe source\n      if (iframeRef.current) {\n        iframeRef.current.src = '';\n      }\n    }\n\n    // Cleanup on unmount\n    return () => {\n      document.body.style.overflow = '';\n      const existingStyle = document.getElementById('video-modal-override');\n      if (existingStyle) {\n        existingStyle.remove();\n      }\n      if (iframeRef.current) {\n        iframeRef.current.src = '';\n      }\n    };\n  }, [isOpen, embedUrl]);\n\n  useEffect(() => {\n    const handleEscape = (e) => {\n      if (e.key === 'Escape' && isOpen) {\n        onClose();\n      }\n    };\n\n    const handleClickOutside = (e) => {\n      if (modalRef.current && !modalRef.current.contains(e.target) && isOpen) {\n        onClose();\n      }\n    };\n\n    if (isOpen) {\n      document.addEventListener('keydown', handleEscape);\n      document.addEventListener('mousedown', handleClickOutside);\n    }\n\n    return () => {\n      document.removeEventListener('keydown', handleEscape);\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isOpen, onClose]);\n\n  if (!isOpen) return null;\n\n  // Inline styles to prevent any external CSS interference\n  const overlayStyle = {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.8)',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    zIndex: 99999,\n    padding: '20px',\n    boxSizing: 'border-box'\n  };\n\n  const containerStyle = {\n    background: 'white',\n    borderRadius: '8px',\n    width: '100%',\n    maxWidth: '900px',\n    maxHeight: '90vh',\n    display: 'flex',\n    flexDirection: 'column',\n    boxShadow: '0 4px 20px rgba(0, 0, 0, 0.3)',\n    overflow: 'hidden'\n  };\n\n  const headerStyle = {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: '16px 20px',\n    borderBottom: '1px solid #e5e7eb',\n    background: '#f9fafb'\n  };\n\n  const titleStyle = {\n    margin: 0,\n    fontSize: '18px',\n    fontWeight: 600,\n    color: '#1f2937'\n  };\n\n  const closeButtonStyle = {\n    background: 'none',\n    border: 'none',\n    fontSize: '24px',\n    color: '#6b7280',\n    cursor: 'pointer',\n    padding: '4px',\n    lineHeight: 1,\n    borderRadius: '4px'\n  };\n\n  const bodyStyle = {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'hidden'\n  };\n\n  const wrapperStyle = {\n    position: 'relative',\n    width: '100%',\n    height: 0,\n    paddingBottom: '56.25%',\n    background: '#000',\n    flexShrink: 0\n  };\n\n  const iframeStyle = {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    border: 'none'\n  };\n\n  const footerStyle = {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    gap: '12px',\n    padding: '16px 20px',\n    borderTop: '1px solid #e5e7eb',\n    background: '#f9fafb'\n  };\n\n  const linkStyle = {\n    display: 'inline-flex',\n    alignItems: 'center',\n    gap: '6px',\n    padding: '8px 16px',\n    background: 'transparent',\n    border: '1px solid #d1d5db',\n    borderRadius: '6px',\n    color: '#374151',\n    textDecoration: 'none',\n    fontSize: '14px',\n    fontWeight: 500\n  };\n\n  const buttonStyle = {\n    padding: '8px 16px',\n    background: '#3b82f6',\n    border: '1px solid #3b82f6',\n    borderRadius: '6px',\n    color: 'white',\n    fontSize: '14px',\n    fontWeight: 500,\n    cursor: 'pointer'\n  };\n\n  return (\n    <div style={overlayStyle}>\n      <div style={containerStyle} ref={modalRef}>\n        <div style={headerStyle}>\n          <h3 style={titleStyle}>{videoTitle}</h3>\n          <button \n            style={closeButtonStyle}\n            onClick={onClose}\n            type=\"button\"\n            aria-label=\"Close video preview\"\n          >\n            ×\n          </button>\n        </div>\n        \n        <div style={bodyStyle}>\n          <div style={wrapperStyle}>\n            <iframe\n              ref={iframeRef}\n              src={embedUrl}\n              title={videoTitle}\n              frameBorder=\"0\"\n              allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n              allowFullScreen\n              style={iframeStyle}\n            />\n          </div>\n          \n          <div style={footerStyle}>\n            <a \n              href={watchUrl} \n              target=\"_blank\" \n              rel=\"noopener noreferrer\"\n              style={linkStyle}\n            >\n              🔗 Open in YouTube\n            </a>\n            <button \n              style={buttonStyle}\n              onClick={onClose}\n              type=\"button\"\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default VideoPreviewModal;","import { useCallback, useEffect, useRef, useState } from 'react';\nimport { useApp } from '../context/AppContext';\nimport { useMasterData } from './useMasterData';\n\n// Shared state across all components to prevent duplicate API calls\nconst sharedFilterState = {\n  // Cache for API responses\n  cache: {\n    courses: new Map(),\n    classes: new Map(),\n    exams: new Map(),\n    subjects: new Map(),\n    topics: new Map(),\n    modules: new Map(),\n    chapters: new Map()\n  },\n  \n  // Loading states\n  loading: {\n    courses: false,\n    classes: false,\n    exams: false,\n    subjects: false,\n    topics: false,\n    modules: false,\n    chapters: false\n  },\n  \n  // Last fetch timestamps for deduplication\n  lastFetch: {\n    courses: new Map(),\n    classes: new Map(),\n    exams: new Map(),\n    subjects: new Map(),\n    topics: new Map(),\n    modules: new Map(),\n    chapters: new Map()\n  },\n  \n  // Abort controllers\n  abortControllers: {\n    courses: null,\n    classes: null,\n    exams: null,\n    subjects: null,\n    topics: null,\n    modules: null,\n    chapters: null\n  }\n};\n\n/**\n * Shared Master Data Filters Hook\n * Prevents duplicate API calls across all master data components\n * Uses shared global state and intelligent caching\n */\nexport const useSharedMasterDataFilters = () => {\n  const { token, addNotification } = useApp();\n  const {\n    fetchCourses,\n    fetchClasses,\n    fetchExams,\n    fetchSubjects,\n    fetchTopicsByLinkage,\n    fetchModulesByTopic,\n    fetchChaptersByModule,\n    isAcademicCourseType,\n    isCompetitiveCourseType,\n    isProfessionalCourseType\n  } = useMasterData();\n\n  // Local filter states (each component maintains its own UI state)\n  const [selectedCourseType, setSelectedCourseType] = useState('');\n  const [selectedCourse, setSelectedCourse] = useState('');\n  const [selectedClass, setSelectedClass] = useState('');\n  const [selectedExam, setSelectedExam] = useState('');\n  const [selectedSubject, setSelectedSubject] = useState('');\n  const [selectedTopic, setSelectedTopic] = useState('');\n  const [selectedModule, setSelectedModule] = useState('');\n  const [showActiveOnly, setShowActiveOnly] = useState(true);\n\n  // Local state for filtered data (populated from shared cache)\n  const [filteredCourses, setFilteredCourses] = useState([]);\n  const [filteredClasses, setFilteredClasses] = useState([]);\n  const [filteredExams, setFilteredExams] = useState([]);\n  const [filteredSubjects, setFilteredSubjects] = useState([]);\n  const [filteredTopics, setFilteredTopics] = useState([]);\n  const [filteredModules, setFilteredModules] = useState([]);\n  const [filteredChapters, setFilteredChapters] = useState([]);\n\n  // Debounce ref\n  const debounceRef = useRef(null);\n\n  // Helper to create cache key\n  const createCacheKey = useCallback((...args) => {\n    return args.filter(Boolean).join('|');\n  }, []);\n\n  // Helper to check if request should be skipped (deduplication)\n  const shouldSkipRequest = useCallback((type, key) => {\n    const lastFetch = sharedFilterState.lastFetch[type].get(key);\n    const now = Date.now();\n    return lastFetch && (now - lastFetch) < 2000; // 2 second deduplication window\n  }, []);\n\n  // Helper to get cached data\n  const getCachedData = useCallback((type, key) => {\n    return sharedFilterState.cache[type].get(key) || [];\n  }, []);\n\n  // Helper to set cached data\n  const setCachedData = useCallback((type, key, data) => {\n    sharedFilterState.cache[type].set(key, data);\n    sharedFilterState.lastFetch[type].set(key, Date.now());\n  }, []);\n\n  // Helper to abort previous request\n  const abortPreviousRequest = useCallback((type) => {\n    const controller = sharedFilterState.abortControllers[type];\n    if (controller) {\n      controller.abort();\n    }\n    sharedFilterState.abortControllers[type] = new AbortController();\n  }, []);\n\n  // Shared fetch courses function\n  const fetchCoursesShared = useCallback(async (courseTypeId) => {\n    if (!courseTypeId) {\n      setFilteredCourses([]);\n      return [];\n    }\n\n    const key = createCacheKey('courses', courseTypeId);\n    \n    // Check cache first\n    const cached = getCachedData('courses', key);\n    if (cached.length > 0) {\n      setFilteredCourses(cached);\n      return cached;\n    }\n\n    // Check if request should be skipped\n    if (shouldSkipRequest('courses', key)) {\n      return [];\n    }\n\n    try {\n      abortPreviousRequest('courses');\n      sharedFilterState.loading.courses = true;\n\n      const data = await fetchCourses(courseTypeId);\n      const result = data || [];\n      \n      setCachedData('courses', key, result);\n      setFilteredCourses(result);\n      return result;\n    } catch (error) {\n      if (error.name !== 'AbortError') {\n        console.error('Error fetching courses:', error);\n      }\n      setFilteredCourses([]);\n      return [];\n    } finally {\n      sharedFilterState.loading.courses = false;\n    }\n  }, [fetchCourses, createCacheKey, getCachedData, shouldSkipRequest, abortPreviousRequest, setCachedData]);\n\n  // Shared fetch classes function\n  const fetchClassesShared = useCallback(async (courseTypeId, courseId) => {\n    if (!courseTypeId || !courseId) {\n      setFilteredClasses([]);\n      return [];\n    }\n\n    const key = createCacheKey('classes', courseTypeId, courseId);\n    \n    // Check cache first\n    const cached = getCachedData('classes', key);\n    if (cached.length > 0) {\n      setFilteredClasses(cached);\n      return cached;\n    }\n\n    // Check if request should be skipped\n    if (shouldSkipRequest('classes', key)) {\n      return [];\n    }\n\n    try {\n      abortPreviousRequest('classes');\n      sharedFilterState.loading.classes = true;\n\n      const data = await fetchClasses(courseTypeId, courseId);\n      const result = data || [];\n      \n      setCachedData('classes', key, result);\n      setFilteredClasses(result);\n      return result;\n    } catch (error) {\n      if (error.name !== 'AbortError') {\n        console.error('Error fetching classes:', error);\n      }\n      setFilteredClasses([]);\n      return [];\n    } finally {\n      sharedFilterState.loading.classes = false;\n    }\n  }, [fetchClasses, createCacheKey, getCachedData, shouldSkipRequest, abortPreviousRequest, setCachedData]);\n\n  // Shared fetch exams function\n  const fetchExamsShared = useCallback(async (courseTypeId, courseId) => {\n    if (!courseTypeId || !courseId) {\n      setFilteredExams([]);\n      return [];\n    }\n\n    const key = createCacheKey('exams', courseTypeId, courseId);\n    \n    // Check cache first\n    const cached = getCachedData('exams', key);\n    if (cached.length > 0) {\n      setFilteredExams(cached);\n      return cached;\n    }\n\n    // Check if request should be skipped\n    if (shouldSkipRequest('exams', key)) {\n      return [];\n    }\n\n    try {\n      abortPreviousRequest('exams');\n      sharedFilterState.loading.exams = true;\n\n      const data = await fetchExams(courseTypeId, courseId);\n      const result = data || [];\n      \n      setCachedData('exams', key, result);\n      setFilteredExams(result);\n      return result;\n    } catch (error) {\n      if (error.name !== 'AbortError') {\n        console.error('Error fetching exams:', error);\n      }\n      setFilteredExams([]);\n      return [];\n    } finally {\n      sharedFilterState.loading.exams = false;\n    }\n  }, [fetchExams, createCacheKey, getCachedData, shouldSkipRequest, abortPreviousRequest, setCachedData]);\n\n  // Shared fetch subjects function\n  const fetchSubjectsShared = useCallback(async (courseTypeId, courseId, classId, examId) => {\n    if (!courseTypeId || !courseId) {\n      setFilteredSubjects([]);\n      return [];\n    }\n\n    const key = createCacheKey('subjects', courseTypeId, courseId, classId, examId);\n    \n    // Check cache first\n    const cached = getCachedData('subjects', key);\n    if (cached.length > 0) {\n      setFilteredSubjects(cached);\n      return cached;\n    }\n\n    // Check if request should be skipped\n    if (shouldSkipRequest('subjects', key)) {\n      return [];\n    }\n\n    try {\n      abortPreviousRequest('subjects');\n      sharedFilterState.loading.subjects = true;\n\n      let data = [];\n      \n      if (isAcademicCourseType(courseTypeId) && classId) {\n        data = await fetchSubjects(courseTypeId, courseId, classId, null, true);\n      } else if (isCompetitiveCourseType(courseTypeId) && examId) {\n        data = await fetchSubjects(courseTypeId, courseId, null, examId, true);\n      } else if (isProfessionalCourseType(courseTypeId)) {\n        data = await fetchSubjects(courseTypeId, courseId, null, null, true);\n      }\n\n      const result = data || [];\n      setCachedData('subjects', key, result);\n      setFilteredSubjects(result);\n      return result;\n    } catch (error) {\n      if (error.name !== 'AbortError') {\n        console.error('Error fetching subjects:', error);\n      }\n      setFilteredSubjects([]);\n      return [];\n    } finally {\n      sharedFilterState.loading.subjects = false;\n    }\n  }, [fetchSubjects, isAcademicCourseType, isCompetitiveCourseType, isProfessionalCourseType, createCacheKey, getCachedData, shouldSkipRequest, abortPreviousRequest, setCachedData]);\n\n  // Shared fetch topics function\n  const fetchTopicsShared = useCallback(async (courseTypeId, subjectId) => {\n    if (!courseTypeId || !subjectId) {\n      setFilteredTopics([]);\n      return [];\n    }\n\n    const key = createCacheKey('topics', courseTypeId, subjectId);\n    \n    // Check cache first\n    const cached = getCachedData('topics', key);\n    if (cached.length > 0) {\n      setFilteredTopics(cached);\n      return cached;\n    }\n\n    // Check if request should be skipped\n    if (shouldSkipRequest('topics', key)) {\n      return [];\n    }\n\n    try {\n      abortPreviousRequest('topics');\n      sharedFilterState.loading.topics = true;\n\n      const data = await fetchTopicsByLinkage(parseInt(courseTypeId), parseInt(subjectId));\n      const list = Array.isArray(data) ? data : (data?.content || data?.data || []);\n      const result = list || [];\n      \n      setCachedData('topics', key, result);\n      setFilteredTopics(result);\n      return result;\n    } catch (error) {\n      if (error.name !== 'AbortError') {\n        console.error('Error fetching topics:', error);\n      }\n      setFilteredTopics([]);\n      return [];\n    } finally {\n      sharedFilterState.loading.topics = false;\n    }\n  }, [fetchTopicsByLinkage, createCacheKey, getCachedData, shouldSkipRequest, abortPreviousRequest, setCachedData]);\n\n  // Shared fetch modules function\n  const fetchModulesShared = useCallback(async (topicId) => {\n    if (!topicId) {\n      setFilteredModules([]);\n      return [];\n    }\n\n    const key = createCacheKey('modules', topicId, showActiveOnly);\n    \n    // Check cache first\n    const cached = getCachedData('modules', key);\n    if (cached.length > 0) {\n      setFilteredModules(cached);\n      return cached;\n    }\n\n    // Check if request should be skipped\n    if (shouldSkipRequest('modules', key)) {\n      return [];\n    }\n\n    try {\n      abortPreviousRequest('modules');\n      sharedFilterState.loading.modules = true;\n\n      const data = await fetchModulesByTopic(topicId, showActiveOnly);\n      const result = data || [];\n      \n      setCachedData('modules', key, result);\n      setFilteredModules(result);\n      return result;\n    } catch (error) {\n      if (error.name !== 'AbortError') {\n        console.error('Error fetching modules:', error);\n      }\n      setFilteredModules([]);\n      return [];\n    } finally {\n      sharedFilterState.loading.modules = false;\n    }\n  }, [fetchModulesByTopic, showActiveOnly, createCacheKey, getCachedData, shouldSkipRequest, abortPreviousRequest, setCachedData]);\n\n  // Shared fetch chapters function\n  const fetchChaptersShared = useCallback(async (moduleId) => {\n    if (!moduleId) {\n      setFilteredChapters([]);\n      return [];\n    }\n\n    const key = createCacheKey('chapters', moduleId, showActiveOnly);\n    \n    // Check cache first\n    const cached = getCachedData('chapters', key);\n    if (cached.length > 0) {\n      setFilteredChapters(cached);\n      return cached;\n    }\n\n    // Check if request should be skipped\n    if (shouldSkipRequest('chapters', key)) {\n      return [];\n    }\n\n    try {\n      abortPreviousRequest('chapters');\n      sharedFilterState.loading.chapters = true;\n\n      const data = await fetchChaptersByModule(moduleId, showActiveOnly);\n      const result = data || [];\n      \n      setCachedData('chapters', key, result);\n      setFilteredChapters(result);\n      return result;\n    } catch (error) {\n      if (error.name !== 'AbortError') {\n        console.error('Error fetching chapters:', error);\n      }\n      setFilteredChapters([]);\n      return [];\n    } finally {\n      sharedFilterState.loading.chapters = false;\n    }\n  }, [fetchChaptersByModule, showActiveOnly, createCacheKey, getCachedData, shouldSkipRequest, abortPreviousRequest, setCachedData]);\n\n  // Consolidated filter effect with debouncing\n  useEffect(() => {\n    // Clear previous timeout\n    if (debounceRef.current) {\n      clearTimeout(debounceRef.current);\n    }\n\n    // Set new timeout for debounced execution\n    debounceRef.current = setTimeout(async () => {\n      console.log('🌍 Shared filter effect triggered:', {\n        courseType: selectedCourseType,\n        course: selectedCourse,\n        class: selectedClass,\n        exam: selectedExam,\n        subject: selectedSubject,\n        topic: selectedTopic,\n        module: selectedModule\n      });\n\n      try {\n        // Sequential loading with shared cache\n        if (selectedCourseType) {\n          await fetchCoursesShared(selectedCourseType);\n        }\n\n        if (selectedCourseType && selectedCourse) {\n          if (isAcademicCourseType(selectedCourseType)) {\n            await fetchClassesShared(selectedCourseType, selectedCourse);\n          }\n          if (isCompetitiveCourseType(selectedCourseType)) {\n            await fetchExamsShared(selectedCourseType, selectedCourse);\n          }\n        }\n\n        if (selectedCourseType && selectedCourse) {\n          await fetchSubjectsShared(selectedCourseType, selectedCourse, selectedClass, selectedExam);\n        }\n\n        if (selectedCourseType && selectedSubject) {\n          await fetchTopicsShared(selectedCourseType, selectedSubject);\n        }\n\n        if (selectedTopic) {\n          await fetchModulesShared(selectedTopic);\n        }\n\n        if (selectedModule) {\n          await fetchChaptersShared(selectedModule);\n        }\n\n        console.log('✅ Shared filter data loaded successfully');\n      } catch (error) {\n        console.error('❌ Error in shared filter effect:', error);\n      }\n    }, 300); // 300ms debounce\n\n    // Cleanup function\n    return () => {\n      if (debounceRef.current) {\n        clearTimeout(debounceRef.current);\n      }\n    };\n  }, [\n    selectedCourseType,\n    selectedCourse,\n    selectedClass,\n    selectedExam,\n    selectedSubject,\n    selectedTopic,\n    selectedModule,\n    fetchCoursesShared,\n    fetchClassesShared,\n    fetchExamsShared,\n    fetchSubjectsShared,\n    fetchTopicsShared,\n    fetchModulesShared,\n    fetchChaptersShared,\n    isAcademicCourseType,\n    isCompetitiveCourseType\n  ]);\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      if (debounceRef.current) {\n        clearTimeout(debounceRef.current);\n      }\n    };\n  }, []);\n\n  // Reset all filters\n  const resetFilters = useCallback(() => {\n    setSelectedCourseType('');\n    setSelectedCourse('');\n    setSelectedClass('');\n    setSelectedExam('');\n    setSelectedSubject('');\n    setSelectedTopic('');\n    setSelectedModule('');\n    \n    // Clear local filtered data\n    setFilteredCourses([]);\n    setFilteredClasses([]);\n    setFilteredExams([]);\n    setFilteredSubjects([]);\n    setFilteredTopics([]);\n    setFilteredModules([]);\n    setFilteredChapters([]);\n  }, []);\n\n  return {\n    // Filter states\n    selectedCourseType,\n    setSelectedCourseType,\n    selectedCourse,\n    setSelectedCourse,\n    selectedClass,\n    setSelectedClass,\n    selectedExam,\n    setSelectedExam,\n    selectedSubject,\n    setSelectedSubject,\n    selectedTopic,\n    setSelectedTopic,\n    selectedModule,\n    setSelectedModule,\n    showActiveOnly,\n    setShowActiveOnly,\n    \n    // Filtered data\n    filteredCourses,\n    filteredClasses,\n    filteredExams,\n    filteredSubjects,\n    filteredTopics,\n    filteredModules,\n    filteredChapters,\n    \n    // Loading states\n    loadingStates: {\n      courses: sharedFilterState.loading.courses,\n      classes: sharedFilterState.loading.classes,\n      exams: sharedFilterState.loading.exams,\n      subjects: sharedFilterState.loading.subjects,\n      topics: sharedFilterState.loading.topics,\n      modules: sharedFilterState.loading.modules,\n      chapters: sharedFilterState.loading.chapters\n    },\n    \n    // Actions\n    resetFilters,\n    \n    // Helpers\n    isAcademicCourseType,\n    isCompetitiveCourseType,\n    isProfessionalCourseType\n  };\n};\n","import React, { useEffect, useState } from 'react';\nimport { useApp } from '../../../context/AppContext';\nimport { useMasterData } from '../../../hooks/useMasterData';\nimport { useSharedMasterDataFilters } from '../../../hooks/useSharedMasterDataFilters';\nimport { getCourseTypesCached } from '../../../services/globalApiCache';\nimport '../MasterDataComponent.css';\n\n/**\n * Chapter Filters Component\n * Handles the filter UI and logic for chapter management\n */\nconst ChapterFilters = ({ onFiltersChange, loading }) => {\n  const { token } = useApp();\n  const { getCourseTypeName } = useMasterData();\n  const [courseTypes, setCourseTypes] = useState([]);\n\n  // Use the master data filters hook\n  const {\n    selectedCourseType,\n    setSelectedCourseType,\n    selectedCourse,\n    setSelectedCourse,\n    selectedClass,\n    setSelectedClass,\n    selectedExam,\n    setSelectedExam,\n    selectedSubject,\n    setSelectedSubject,\n    selectedTopic,\n    setSelectedTopic,\n    selectedModule,\n    setSelectedModule,\n    showActiveOnly,\n    setShowActiveOnly,\n    filteredCourses,\n    filteredClasses,\n    filteredExams,\n    filteredSubjects,\n    filteredTopics,\n    filteredModules,\n    loadingStates,\n    resetFilters,\n    isAcademicCourseType,\n    isCompetitiveCourseType\n  } = useSharedMasterDataFilters();\n\n  // Load course types on mount\n  useEffect(() => {\n    const loadCourseTypes = async () => {\n      if (!token) return;\n      try {\n        const data = await getCourseTypesCached(token);\n        console.log('Raw courseTypes API response (ChapterFilters):', data);\n        console.log('CourseTypes data type:', typeof data);\n        console.log('CourseTypes is array:', Array.isArray(data));\n        \n        // Handle different response formats\n        let courseTypesArray = [];\n        if (Array.isArray(data)) {\n          courseTypesArray = data;\n        } else if (data && Array.isArray(data.content)) {\n          // Handle paginated response\n          courseTypesArray = data.content;\n        } else if (data && Array.isArray(data.data)) {\n          // Handle wrapped response\n          courseTypesArray = data.data;\n        } else if (data && data.courseTypes && Array.isArray(data.courseTypes)) {\n          // Handle nested response\n          courseTypesArray = data.courseTypes;\n        } else {\n          console.warn('Unexpected courseTypes data format (ChapterFilters):', data);\n          courseTypesArray = [];\n        }\n        \n        console.log('Processed courseTypes array (ChapterFilters):', courseTypesArray);\n        setCourseTypes(courseTypesArray);\n      } catch (error) {\n        console.error('Error loading course types:', error);\n      }\n    };\n    loadCourseTypes();\n  }, [token]);\n\n  // Notify parent component of filter changes\n  useEffect(() => {\n    if (onFiltersChange) {\n      onFiltersChange({\n        courseType: selectedCourseType,\n        course: selectedCourse,\n        class: selectedClass,\n        exam: selectedExam,\n        subject: selectedSubject,\n        topic: selectedTopic,\n        module: selectedModule,\n        showActiveOnly\n      });\n    }\n  }, [selectedCourseType, selectedCourse, selectedClass, selectedExam, selectedSubject, selectedTopic, selectedModule, showActiveOnly, onFiltersChange]);\n\n  const handleFilterChange = (filterType, value) => {\n    switch (filterType) {\n      case 'courseType':\n        setSelectedCourseType(value);\n        // Reset dependent filters\n        setSelectedCourse('');\n        setSelectedClass('');\n        setSelectedExam('');\n        setSelectedSubject('');\n        setSelectedTopic('');\n        setSelectedModule('');\n        break;\n      case 'course':\n        setSelectedCourse(value);\n        // Reset dependent filters\n        setSelectedClass('');\n        setSelectedExam('');\n        setSelectedSubject('');\n        setSelectedTopic('');\n        setSelectedModule('');\n        break;\n      case 'class':\n        setSelectedClass(value);\n        // Reset dependent filters\n        setSelectedSubject('');\n        setSelectedTopic('');\n        setSelectedModule('');\n        break;\n      case 'exam':\n        setSelectedExam(value);\n        // Reset dependent filters\n        setSelectedSubject('');\n        setSelectedTopic('');\n        setSelectedModule('');\n        break;\n      case 'subject':\n        setSelectedSubject(value);\n        // Reset dependent filters\n        setSelectedTopic('');\n        setSelectedModule('');\n        break;\n      case 'topic':\n        setSelectedTopic(value);\n        // Reset dependent filters\n        setSelectedModule('');\n        break;\n      case 'module':\n        setSelectedModule(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const clearAllFilters = () => {\n    resetFilters();\n  };\n\n  return (\n    <div className=\"filter-section\">\n      <div className=\"filter-header\">\n        <h4>Filter Chapters</h4>\n        <div className=\"filter-header-controls\">\n          <label className=\"filter-checkbox\">\n            <input \n              type=\"checkbox\" \n              checked={showActiveOnly} \n              onChange={(e) => setShowActiveOnly(e.target.checked)} \n            />\n            <span>Active Only</span>\n          </label>\n          <button \n            className=\"btn btn-outline btn-xs\" \n            onClick={clearAllFilters}\n            disabled={loading}\n          >\n            Clear All Filters\n          </button>\n        </div>\n      </div>\n\n      {(loading && courseTypes.length === 0) ? (\n        <div className=\"empty-state\">\n          <div className=\"empty-icon\">No Chapters</div>\n          <h4>Loading Course Types...</h4>\n          <p>Please wait while we load the course types</p>\n        </div>\n      ) : (\n        <div className=\"filter-row\">\n          {/* Course Type Filter */}\n          <div className=\"filter-group\">\n            <label htmlFor=\"course-type-filter\">1. Course Type:</label>\n            <select\n              id=\"course-type-filter\"\n              value={selectedCourseType}\n              onChange={(e) => handleFilterChange('courseType', e.target.value)}\n              className=\"filter-select\"\n            >\n              <option value=\"\">Select Course Type</option>\n              {courseTypes.map(courseType => (\n                <option key={courseType.id} value={courseType.id}>\n                  {courseType.name}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          {/* Course Filter */}\n          <div className=\"filter-group\">\n            <label htmlFor=\"course-filter\">2. Course:</label>\n            <select\n              id=\"course-filter\"\n              value={selectedCourse}\n              onChange={(e) => handleFilterChange('course', e.target.value)}\n              className=\"filter-select\"\n              disabled={!selectedCourseType || loadingStates.courses}\n            >\n              <option value=\"\">Select Course</option>\n              {filteredCourses.map(course => (\n                <option key={course.id} value={course.id}>\n                  {course.name}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          {/* Class Filter (Academic only) */}\n          {isAcademicCourseType(selectedCourseType) && (\n            <div className=\"filter-group\">\n              <label htmlFor=\"class-filter\">3. Class:</label>\n              <select\n                id=\"class-filter\"\n                value={selectedClass}\n                onChange={(e) => handleFilterChange('class', e.target.value)}\n                className=\"filter-select\"\n                disabled={!selectedCourse || loadingStates.classes}\n              >\n                <option value=\"\">Select Class</option>\n                {filteredClasses.map(classItem => (\n                  <option key={classItem.id} value={classItem.id}>\n                    {classItem.name}\n                  </option>\n                ))}\n              </select>\n            </div>\n          )}\n\n          {/* Exam Filter (Competitive only) */}\n          {isCompetitiveCourseType(selectedCourseType) && (\n            <div className=\"filter-group\">\n              <label htmlFor=\"exam-filter\">3. Exam:</label>\n              <select\n                id=\"exam-filter\"\n                value={selectedExam}\n                onChange={(e) => handleFilterChange('exam', e.target.value)}\n                className=\"filter-select\"\n                disabled={!selectedCourse || loadingStates.exams}\n              >\n                <option value=\"\">Select Exam</option>\n                {filteredExams.map(exam => (\n                  <option key={exam.id} value={exam.id}>\n                    {exam.name}\n                  </option>\n                ))}\n              </select>\n            </div>\n          )}\n\n          {/* Subject Filter */}\n          <div className=\"filter-group\">\n            <label htmlFor=\"subject-filter\">4. Subject:</label>\n            <select\n              id=\"subject-filter\"\n              value={selectedSubject}\n              onChange={(e) => handleFilterChange('subject', e.target.value)}\n              className=\"filter-select\"\n              disabled={!selectedCourse || loadingStates.subjects}\n            >\n              <option value=\"\">Select Subject</option>\n              {filteredSubjects.map(subject => {\n                const subjectName = subject.subjectName || subject.name;\n                return (\n                  <option key={subject.linkageId || subject.id} value={subject.linkageId || subject.id}>\n                    {subjectName}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n\n          {/* Topic Filter */}\n          <div className=\"filter-group\">\n            <label htmlFor=\"topic-filter\">5. Topic:</label>\n            <select\n              id=\"topic-filter\"\n              value={selectedTopic}\n              onChange={(e) => handleFilterChange('topic', e.target.value)}\n              className=\"filter-select\"\n              disabled={!selectedSubject || loadingStates.topics}\n            >\n              <option value=\"\">Select Topic</option>\n              {filteredTopics.map(topic => (\n                <option key={topic.id} value={topic.id}>\n                  {topic.name}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          {/* Module Filter */}\n          <div className=\"filter-group\">\n            <label htmlFor=\"module-filter\">6. Module:</label>\n            <select\n              id=\"module-filter\"\n              value={selectedModule}\n              onChange={(e) => handleFilterChange('module', e.target.value)}\n              className=\"filter-select\"\n              disabled={!selectedTopic || loadingStates.modules}\n            >\n              <option value=\"\">Select Module</option>\n              {filteredModules.map(module => (\n                <option key={module.id} value={module.id}>\n                  {module.name}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n      )}\n\n      {/* Active Filters Summary */}\n      {(selectedCourseType || selectedCourse || selectedClass || selectedExam || selectedSubject || selectedTopic || selectedModule || !showActiveOnly) && (\n        <div className=\"active-filters\">\n          <strong>Active Filters:</strong>\n          {selectedCourseType && (\n            <span className=\"filter-tag\">\n              Course Type: {getCourseTypeName(selectedCourseType)}\n            </span>\n          )}\n          {selectedCourse && (\n            <span className=\"filter-tag\">\n              Course: {filteredCourses.find(c => c.id == selectedCourse)?.name}\n            </span>\n          )}\n          {selectedClass && (\n            <span className=\"filter-tag\">\n              Class: {filteredClasses.find(c => c.id == selectedClass)?.name}\n            </span>\n          )}\n          {selectedExam && (\n            <span className=\"filter-tag\">\n              Exam: {filteredExams.find(e => e.id == selectedExam)?.name}\n            </span>\n          )}\n          {selectedSubject && (\n            <span className=\"filter-tag\">\n              Subject: {filteredSubjects.find(s => s.id == selectedSubject)?.name || filteredSubjects.find(s => s.id == selectedSubject)?.subjectName}\n            </span>\n          )}\n          {selectedTopic && (\n            <span className=\"filter-tag\">\n              Topic: {filteredTopics.find(t => t.id == selectedTopic)?.name}\n            </span>\n          )}\n          {selectedModule && (\n            <span className=\"filter-tag\">\n              Module: {filteredModules.find(m => m.id == selectedModule)?.name}\n            </span>\n          )}\n          {!showActiveOnly && (\n            <span className=\"filter-tag\">Including Inactive</span>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ChapterFilters;\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport { useApp } from '../context/AppContext';\nimport { useFormManager } from './useFormManager';\nimport { useMasterData } from './useMasterData';\n\n/**\n * Custom hook for managing master data forms with cascading dropdowns\n * Provides consistent form behavior across all master data components\n */\nexport const useMasterDataForm = (initialFormData, validationRules, onSubmit) => {\n  const { token, addNotification } = useApp();\n  const {\n    fetchCourses,\n    fetchClasses,\n    fetchExams,\n    fetchSubjects,\n    fetchTopicsByLinkage,\n    fetchModulesByTopic,\n    fetchChaptersByModule,\n    isAcademicCourseType,\n    isCompetitiveCourseType,\n    isProfessionalCourseType\n  } = useMasterData();\n\n  // Form management\n  const {\n    formData,\n    errors,\n    touched,\n    handleInputChange,\n    handleBlur,\n    validateForm,\n    resetForm,\n    setFormData\n  } = useFormManager(initialFormData, validationRules);\n\n  // Form-specific filtered data\n  const [formFilteredCourses, setFormFilteredCourses] = useState([]);\n  const [formFilteredClasses, setFormFilteredClasses] = useState([]);\n  const [formFilteredExams, setFormFilteredExams] = useState([]);\n  const [formFilteredSubjects, setFormFilteredSubjects] = useState([]);\n  const [formFilteredTopics, setFormFilteredTopics] = useState([]);\n  const [formFilteredModules, setFormFilteredModules] = useState([]);\n  const [formFilteredChapters, setFormFilteredChapters] = useState([]);\n\n  // Form loading states\n  const [formLoadingStates, setFormLoadingStates] = useState({\n    courses: false,\n    classes: false,\n    exams: false,\n    subjects: false,\n    topics: false,\n    modules: false,\n    chapters: false\n  });\n\n  // Deduplication refs for form\n  const formLastFetchRef = useRef({\n    courses: { key: '', timestamp: 0 },\n    classes: { key: '', timestamp: 0 },\n    exams: { key: '', timestamp: 0 },\n    subjects: { key: '', timestamp: 0 },\n    topics: { key: '', timestamp: 0 },\n    modules: { key: '', timestamp: 0 },\n    chapters: { key: '', timestamp: 0 }\n  });\n\n  // Abort controllers for form\n  const formAbortControllersRef = useRef({});\n\n  // Helper to create cache key\n  const createCacheKey = useCallback((...args) => {\n    return args.filter(Boolean).join('|');\n  }, []);\n\n  // Helper to check if request should be skipped\n  const shouldSkipRequest = useCallback((type, key) => {\n    const lastFetch = formLastFetchRef.current[type];\n    const now = Date.now();\n    return lastFetch.key === key && (now - lastFetch.timestamp) < 1000; // 1 second deduplication\n  }, []);\n\n  // Helper to update loading state\n  const updateFormLoadingState = useCallback((type, isLoading) => {\n    setFormLoadingStates(prev => ({ ...prev, [type]: isLoading }));\n  }, []);\n\n  // Helper to abort previous request\n  const abortFormPreviousRequest = useCallback((type) => {\n    if (formAbortControllersRef.current[type]) {\n      formAbortControllersRef.current[type].abort();\n    }\n    formAbortControllersRef.current[type] = new AbortController();\n  }, []);\n\n  // Fetch courses for form\n  const fetchFormCourses = useCallback(async (courseTypeId) => {\n    if (!courseTypeId) {\n      setFormFilteredCourses([]);\n      return;\n    }\n\n    const key = createCacheKey('form-courses', courseTypeId);\n    if (shouldSkipRequest('courses', key)) return;\n\n    try {\n      abortFormPreviousRequest('courses');\n      updateFormLoadingState('courses', true);\n\n      const data = await fetchCourses(courseTypeId);\n      setFormFilteredCourses(data || []);\n      \n      formLastFetchRef.current.courses = { key, timestamp: Date.now() };\n    } catch (error) {\n      if (error.name !== 'AbortError') {\n        console.error('Error fetching form courses:', error);\n        addNotification({\n          type: 'error',\n          message: 'Failed to fetch courses',\n          duration: 3000\n        });\n        setFormFilteredCourses([]);\n      }\n    } finally {\n      updateFormLoadingState('courses', false);\n    }\n  }, [fetchCourses, createCacheKey, shouldSkipRequest, abortFormPreviousRequest, updateFormLoadingState, addNotification]);\n\n  // Fetch classes and exams for form\n  const fetchFormClassesAndExams = useCallback(async (courseTypeId, courseId) => {\n    if (!courseTypeId || !courseId) {\n      setFormFilteredClasses([]);\n      setFormFilteredExams([]);\n      return;\n    }\n\n    const promises = [];\n    \n    if (isAcademicCourseType(courseTypeId)) {\n      const classKey = createCacheKey('form-classes', courseTypeId, courseId);\n      if (!shouldSkipRequest('classes', classKey)) {\n        promises.push(\n          fetchClasses(courseTypeId, courseId).then(data => {\n            setFormFilteredClasses(data || []);\n            formLastFetchRef.current.classes = { key: classKey, timestamp: Date.now() };\n          }).catch(error => {\n            if (error.name !== 'AbortError') {\n              console.error('Error fetching form classes:', error);\n              setFormFilteredClasses([]);\n            }\n          })\n        );\n      }\n    }\n\n    if (isCompetitiveCourseType(courseTypeId)) {\n      const examKey = createCacheKey('form-exams', courseTypeId, courseId);\n      if (!shouldSkipRequest('exams', examKey)) {\n        promises.push(\n          fetchExams(courseTypeId, courseId).then(data => {\n            setFormFilteredExams(data || []);\n            formLastFetchRef.current.exams = { key: examKey, timestamp: Date.now() };\n          }).catch(error => {\n            if (error.name !== 'AbortError') {\n              console.error('Error fetching form exams:', error);\n              setFormFilteredExams([]);\n            }\n          })\n        );\n      }\n    }\n\n    if (promises.length > 0) {\n      updateFormLoadingState('classes', true);\n      updateFormLoadingState('exams', true);\n      \n      try {\n        await Promise.all(promises);\n      } finally {\n        updateFormLoadingState('classes', false);\n        updateFormLoadingState('exams', false);\n      }\n    }\n  }, [fetchClasses, fetchExams, isAcademicCourseType, isCompetitiveCourseType, createCacheKey, shouldSkipRequest, updateFormLoadingState]);\n\n  // Fetch subjects for form\n  const fetchFormSubjects = useCallback(async (courseTypeId, courseId, classId, examId) => {\n    if (!courseTypeId || !courseId) {\n      setFormFilteredSubjects([]);\n      return;\n    }\n\n    const key = createCacheKey('form-subjects', courseTypeId, courseId, classId, examId);\n    if (shouldSkipRequest('subjects', key)) return;\n\n    try {\n      abortFormPreviousRequest('subjects');\n      updateFormLoadingState('subjects', true);\n\n      let data = [];\n      \n      if (isAcademicCourseType(courseTypeId) && classId) {\n        data = await fetchSubjects(courseTypeId, courseId, classId, null, true);\n      } else if (isCompetitiveCourseType(courseTypeId) && examId) {\n        data = await fetchSubjects(courseTypeId, courseId, null, examId, true);\n      } else if (isProfessionalCourseType(courseTypeId)) {\n        data = await fetchSubjects(courseTypeId, courseId, null, null, true);\n      }\n\n      setFormFilteredSubjects(data || []);\n      formLastFetchRef.current.subjects = { key, timestamp: Date.now() };\n    } catch (error) {\n      if (error.name !== 'AbortError') {\n        console.error('Error fetching form subjects:', error);\n        addNotification({\n          type: 'error',\n          message: 'Failed to fetch subjects',\n          duration: 3000\n        });\n        setFormFilteredSubjects([]);\n      }\n    } finally {\n      updateFormLoadingState('subjects', false);\n    }\n  }, [fetchSubjects, isAcademicCourseType, isCompetitiveCourseType, isProfessionalCourseType, createCacheKey, shouldSkipRequest, abortFormPreviousRequest, updateFormLoadingState, addNotification]);\n\n  // Fetch topics for form\n  const fetchFormTopics = useCallback(async (courseTypeId, subjectId) => {\n    if (!courseTypeId || !subjectId) {\n      setFormFilteredTopics([]);\n      return;\n    }\n\n    const key = createCacheKey('form-topics', courseTypeId, subjectId);\n    if (shouldSkipRequest('topics', key)) return;\n\n    try {\n      abortFormPreviousRequest('topics');\n      updateFormLoadingState('topics', true);\n\n      const data = await fetchTopicsByLinkage(parseInt(courseTypeId), parseInt(subjectId));\n      const list = Array.isArray(data) ? data : (data?.content || data?.data || []);\n      \n      setFormFilteredTopics(list || []);\n      formLastFetchRef.current.topics = { key, timestamp: Date.now() };\n    } catch (error) {\n      if (error.name !== 'AbortError') {\n        console.error('Error fetching form topics:', error);\n        addNotification({\n          type: 'error',\n          message: 'Failed to fetch topics',\n          duration: 3000\n        });\n        setFormFilteredTopics([]);\n      }\n    } finally {\n      updateFormLoadingState('topics', false);\n    }\n  }, [fetchTopicsByLinkage, createCacheKey, shouldSkipRequest, abortFormPreviousRequest, updateFormLoadingState, addNotification]);\n\n  // Fetch modules for form\n  const fetchFormModules = useCallback(async (topicId) => {\n    if (!topicId) {\n      setFormFilteredModules([]);\n      return;\n    }\n\n    const key = createCacheKey('form-modules', topicId);\n    if (shouldSkipRequest('modules', key)) return;\n\n    try {\n      abortFormPreviousRequest('modules');\n      updateFormLoadingState('modules', true);\n\n      const data = await fetchModulesByTopic(topicId, true);\n      setFormFilteredModules(data || []);\n      \n      formLastFetchRef.current.modules = { key, timestamp: Date.now() };\n    } catch (error) {\n      if (error.name !== 'AbortError') {\n        console.error('Error fetching form modules:', error);\n        addNotification({\n          type: 'error',\n          message: 'Failed to fetch modules',\n          duration: 3000\n        });\n        setFormFilteredModules([]);\n      }\n    } finally {\n      updateFormLoadingState('modules', false);\n    }\n  }, [fetchModulesByTopic, createCacheKey, shouldSkipRequest, abortFormPreviousRequest, updateFormLoadingState, addNotification]);\n\n  // Fetch chapters for form\n  const fetchFormChapters = useCallback(async (moduleId) => {\n    if (!moduleId) {\n      setFormFilteredChapters([]);\n      return;\n    }\n\n    const key = createCacheKey('form-chapters', moduleId);\n    if (shouldSkipRequest('chapters', key)) return;\n\n    try {\n      abortFormPreviousRequest('chapters');\n      updateFormLoadingState('chapters', true);\n\n      const data = await fetchChaptersByModule(moduleId, true);\n      setFormFilteredChapters(data || []);\n      \n      formLastFetchRef.current.chapters = { key, timestamp: Date.now() };\n    } catch (error) {\n      if (error.name !== 'AbortError') {\n        console.error('Error fetching form chapters:', error);\n        addNotification({\n          type: 'error',\n          message: 'Failed to fetch chapters',\n          duration: 3000\n        });\n        setFormFilteredChapters([]);\n      }\n    } finally {\n      updateFormLoadingState('chapters', false);\n    }\n  }, [fetchChaptersByModule, createCacheKey, shouldSkipRequest, abortFormPreviousRequest, updateFormLoadingState, addNotification]);\n\n  // Enhanced form submission with validation\n  const handleFormSubmit = useCallback(async (e) => {\n    e.preventDefault();\n    \n    // Check if subjects are still loading before validation\n    if (!formData.courseTypeId || !formData.courseId) {\n      addNotification({\n        type: 'error',\n        message: 'Please select course type and course first',\n        duration: 3000\n      });\n      return;\n    }\n\n    // For Academic/Competitive courses, check if class/exam is selected\n    if (isAcademicCourseType(formData.courseTypeId) && !formData.classId) {\n      addNotification({\n        type: 'error',\n        message: 'Please select a class for Academic courses',\n        duration: 3000\n      });\n      return;\n    }\n    \n    if (isCompetitiveCourseType(formData.courseTypeId) && !formData.examId) {\n      addNotification({\n        type: 'error',\n        message: 'Please select an exam for Competitive courses',\n        duration: 3000\n      });\n      return;\n    }\n\n    // Check if subjects are loaded\n    if (formFilteredSubjects.length === 0) {\n      addNotification({\n        type: 'error',\n        message: 'Please wait for subjects to load or check your selections',\n        duration: 3000\n      });\n      return;\n    }\n    \n    if (!validateForm()) {\n      addNotification({\n        type: 'error',\n        message: 'Please fix the form errors',\n        duration: 3000\n      });\n      return;\n    }\n\n    // Call the provided onSubmit function\n    if (onSubmit) {\n      await onSubmit(formData);\n    }\n  }, [formData, formFilteredSubjects.length, validateForm, addNotification, isAcademicCourseType, isCompetitiveCourseType, onSubmit]);\n\n  // Reset form and all dependent data\n  const resetFormWithData = useCallback(() => {\n    resetForm();\n    setFormFilteredCourses([]);\n    setFormFilteredClasses([]);\n    setFormFilteredExams([]);\n    setFormFilteredSubjects([]);\n    setFormFilteredTopics([]);\n    setFormFilteredModules([]);\n    setFormFilteredChapters([]);\n  }, [resetForm]);\n\n  // Effects for cascading form data loading\n  useEffect(() => {\n    fetchFormCourses(formData.courseTypeId);\n  }, [formData.courseTypeId, fetchFormCourses]);\n\n  useEffect(() => {\n    fetchFormClassesAndExams(formData.courseTypeId, formData.courseId);\n  }, [formData.courseTypeId, formData.courseId, fetchFormClassesAndExams]);\n\n  useEffect(() => {\n    fetchFormSubjects(formData.courseTypeId, formData.courseId, formData.classId, formData.examId);\n  }, [formData.courseTypeId, formData.courseId, formData.classId, formData.examId, fetchFormSubjects]);\n\n  useEffect(() => {\n    fetchFormTopics(formData.courseTypeId, formData.subjectId);\n  }, [formData.courseTypeId, formData.subjectId, fetchFormTopics]);\n\n  useEffect(() => {\n    fetchFormModules(formData.topicId);\n  }, [formData.topicId, fetchFormModules]);\n\n  useEffect(() => {\n    fetchFormChapters(formData.moduleId);\n  }, [formData.moduleId, fetchFormChapters]);\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      Object.values(formAbortControllersRef.current).forEach(controller => {\n        if (controller) controller.abort();\n      });\n    };\n  }, []);\n\n  return {\n    // Form state\n    formData,\n    errors,\n    touched,\n    handleInputChange,\n    handleBlur,\n    validateForm,\n    resetForm: resetFormWithData,\n    setFormData,\n    handleSubmit: handleFormSubmit,\n    \n    // Form filtered data\n    formFilteredCourses,\n    formFilteredClasses,\n    formFilteredExams,\n    formFilteredSubjects,\n    formFilteredTopics,\n    formFilteredModules,\n    formFilteredChapters,\n    \n    // Form loading states\n    formLoadingStates,\n    \n    // Helpers\n    isAcademicCourseType,\n    isCompetitiveCourseType,\n    isProfessionalCourseType\n  };\n};\n","/**\n * Document Utility Functions\n * Handles document file validation, preview, and metadata\n */\n\n/**\n * Get file icon based on file extension\n * @param {string} fileName - File name or extension\n * @returns {string} - File icon emoji\n */\nexport const getFileIcon = (fileName) => {\n  if (!fileName) return '📄';\n  \n  const extension = fileName.split('.').pop()?.toLowerCase();\n  \n  const iconMap = {\n    // PDF files\n    'pdf': '📕',\n    \n    // Word documents\n    'doc': '📘',\n    'docx': '📘',\n    \n    // Excel files\n    'xls': '📗',\n    'xlsx': '📗',\n    \n    // PowerPoint files\n    'ppt': '📙',\n    'pptx': '📙',\n    \n    // Text files\n    'txt': '📄',\n    'rtf': '📄',\n    \n    // Images\n    'jpg': '🖼️',\n    'jpeg': '🖼️',\n    'png': '🖼️',\n    'gif': '🖼️',\n    'bmp': '🖼️',\n    'svg': '🖼️',\n    \n    // Archives\n    'zip': '🗜️',\n    'rar': '🗜️',\n    '7z': '🗜️',\n    \n    // Audio\n    'mp3': '🎵',\n    'wav': '🎵',\n    'm4a': '🎵',\n    \n    // Video\n    'mp4': '🎬',\n    'avi': '🎬',\n    'mov': '🎬',\n    'wmv': '🎬',\n    \n    // Code files\n    'js': '💻',\n    'html': '💻',\n    'css': '💻',\n    'json': '💻',\n    'xml': '💻'\n  };\n  \n  return iconMap[extension] || '📄';\n};\n\n/**\n * Get file type display name\n * @param {string} fileName - File name\n * @returns {string} - File type display name\n */\nexport const getFileTypeDisplay = (fileName) => {\n  if (!fileName) return 'Unknown';\n  \n  const extension = fileName.split('.').pop()?.toLowerCase();\n  \n  const typeMap = {\n    'pdf': 'PDF Document',\n    'doc': 'Word Document',\n    'docx': 'Word Document',\n    'xls': 'Excel Spreadsheet',\n    'xlsx': 'Excel Spreadsheet',\n    'ppt': 'PowerPoint Presentation',\n    'pptx': 'PowerPoint Presentation',\n    'txt': 'Text File',\n    'rtf': 'Rich Text File',\n    'jpg': 'JPEG Image',\n    'jpeg': 'JPEG Image',\n    'png': 'PNG Image',\n    'gif': 'GIF Image',\n    'zip': 'ZIP Archive',\n    'rar': 'RAR Archive',\n    'mp3': 'MP3 Audio',\n    'mp4': 'MP4 Video'\n  };\n  \n  return typeMap[extension] || `${extension?.toUpperCase()} File`;\n};\n\n/**\n * Validate file type for upload - PDF only\n * @param {string} fileName - File name\n * @param {Array} allowedTypes - Allowed file extensions (defaults to PDF only)\n * @returns {object} - Validation result\n */\nexport const validateFileType = (fileName, allowedTypes = ['pdf']) => {\n  if (!fileName) {\n    return {\n      isValid: false,\n      error: 'No file selected'\n    };\n  }\n  \n  const extension = fileName.split('.').pop()?.toLowerCase();\n  \n  if (!extension) {\n    return {\n      isValid: false,\n      error: 'Invalid file format'\n    };\n  }\n  \n  if (!allowedTypes.includes(extension)) {\n    return {\n      isValid: false,\n      error: `Only PDF files are allowed. Selected file type: .${extension}`\n    };\n  }\n  \n  return {\n    isValid: true,\n    error: null,\n    extension,\n    type: getFileTypeDisplay(fileName)\n  };\n};\n\n/**\n * Format file size in human readable format\n * @param {number} bytes - File size in bytes\n * @returns {string} - Formatted file size\n */\nexport const formatFileSize = (bytes) => {\n  if (!bytes || bytes === 0) return '0 Bytes';\n  \n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  \n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n};\n\n/**\n * Generate file preview URL (for supported file types)\n * @param {string} fileName - File name\n * @param {string} filePath - File path (if available)\n * @returns {string|null} - Preview URL or null if not supported\n */\nexport const getFilePreviewUrl = (fileName, filePath = null) => {\n  if (!fileName) return null;\n  \n  const extension = fileName.split('.').pop()?.toLowerCase();\n  \n  // For now, return null as we'll handle preview differently\n  // This could be extended to support actual file preview URLs\n  return null;\n};\n\n/**\n * Check if file type supports preview - PDF only\n * @param {string} fileName - File name\n * @returns {boolean} - Whether file supports preview\n */\nexport const supportsPreview = (fileName) => {\n  if (!fileName) return false;\n  \n  const extension = fileName.split('.').pop()?.toLowerCase();\n  return extension === 'pdf';\n};\n\n/**\n * Process PDF document file for form input\n * @param {string} fileName - File name\n * @param {number} fileSize - File size in bytes\n * @param {string} filePath - File path (optional)\n * @returns {object} - Processed file data\n */\nexport const processDocumentFile = (fileName, fileSize = null, filePath = null) => {\n  const validation = validateFileType(fileName, ['pdf']);\n  \n  if (!validation.isValid) {\n    return {\n      isValid: false,\n      error: validation.error,\n      fileName: null,\n      fileIcon: '📄',\n      fileType: 'Unknown',\n      fileSize: null,\n      previewUrl: null,\n      supportsPreview: false\n    };\n  }\n  \n  return {\n    isValid: true,\n    error: null,\n    fileName,\n    fileIcon: getFileIcon(fileName),\n    fileType: validation.type,\n    fileSize: fileSize ? formatFileSize(fileSize) : null,\n    previewUrl: getFilePreviewUrl(fileName, filePath),\n    supportsPreview: supportsPreview(fileName)\n  };\n};\n\n/**\n * Generate file download URL\n * @param {string} fileName - File name\n * @param {string} filePath - File path\n * @returns {string} - Download URL\n */\nexport const getFileDownloadUrl = (fileName, filePath) => {\n  if (!fileName) return null;\n  \n  // This would typically be replaced with your actual file serving endpoint\n  return filePath || `/api/files/download/${encodeURIComponent(fileName)}`;\n};\n\n/**\n * Validate and process multiple files\n * @param {Array} files - Array of file objects\n * @returns {Array} - Array of processed file data\n */\nexport const processMultipleFiles = (files) => {\n  if (!Array.isArray(files)) return [];\n  \n  return files.map(file => {\n    if (typeof file === 'string') {\n      // If it's just a filename string\n      return processDocumentFile(file);\n    } else if (typeof file === 'object' && file.fileName) {\n      // If it's a file object\n      return processDocumentFile(file.fileName, file.fileSize, file.filePath);\n    }\n    \n    return {\n      isValid: false,\n      error: 'Invalid file format',\n      fileName: null,\n      fileIcon: '📄',\n      fileType: 'Unknown',\n      fileSize: null,\n      previewUrl: null,\n      supportsPreview: false\n    };\n  });\n};\n","/**\n * YouTube Utility Functions\n * Handles YouTube URL validation, ID extraction, and metadata\n */\n\n/**\n * Extract YouTube video ID from various YouTube URL formats\n * @param {string} url - YouTube URL\n * @returns {string|null} - Video ID or null if invalid\n */\nexport const getYouTubeVideoId = (url) => {\n  if (!url) return null;\n  \n  // Remove any whitespace and quotes\n  url = url.trim().replace(/^[\"']|[\"']$/g, '');\n  \n  // YouTube URL patterns\n  const patterns = [\n    // Standard watch URLs\n    /(?:youtube\\.com\\/watch\\?v=|youtu\\.be\\/|youtube\\.com\\/embed\\/)([^\"&?\\/\\s]{11})/,\n    // Short URLs\n    /youtu\\.be\\/([^\"&?\\/\\s]{11})/,\n    // Embed URLs\n    /youtube\\.com\\/embed\\/([^\"&?\\/\\s]{11})/,\n    // Mobile URLs\n    /youtube\\.com\\/v\\/([^\"&?\\/\\s]{11})/,\n    // Live URLs\n    /youtube\\.com\\/live\\/([^\"&?\\/\\s]{11})/\n  ];\n  \n  for (const pattern of patterns) {\n    const match = url.match(pattern);\n    if (match) {\n      return match[1];\n    }\n  }\n  \n  return null;\n};\n\n/**\n * Validate if a URL is a valid YouTube URL\n * @param {string} url - URL to validate\n * @returns {boolean} - True if valid YouTube URL\n */\nexport const isValidYouTubeUrl = (url) => {\n  return getYouTubeVideoId(url) !== null;\n};\n\n/**\n * Generate YouTube thumbnail URL\n * @param {string} videoId - YouTube video ID\n * @param {string} quality - Thumbnail quality (default, medium, high, maxres)\n * @returns {string} - Thumbnail URL\n */\nexport const getYouTubeThumbnail = (videoId, quality = 'maxres') => {\n  if (!videoId) return null;\n  \n  const qualityMap = {\n    default: 'default',\n    medium: 'mqdefault',\n    high: 'hqdefault',\n    maxres: 'maxresdefault'\n  };\n  \n  const qualityKey = qualityMap[quality] || 'maxresdefault';\n  return `https://img.youtube.com/vi/${videoId}/${qualityKey}.jpg`;\n};\n\n/**\n * Generate YouTube embed URL\n * @param {string} videoId - YouTube video ID\n * @param {object} options - Embed options\n * @returns {string} - Embed URL\n */\nexport const getYouTubeEmbedUrl = (videoId, options = {}) => {\n  if (!videoId) return null;\n  \n  const defaultOptions = {\n    autoplay: 0,\n    controls: 1,\n    showinfo: 1,\n    rel: 0,\n    modestbranding: 1,\n    ...options\n  };\n  \n  const params = new URLSearchParams(defaultOptions);\n  return `https://www.youtube.com/embed/${videoId}?${params.toString()}`;\n};\n\n/**\n * Generate YouTube watch URL\n * @param {string} videoId - YouTube video ID\n * @returns {string} - Watch URL\n */\nexport const getYouTubeWatchUrl = (videoId) => {\n  if (!videoId) return null;\n  return `https://www.youtube.com/watch?v=${videoId}`;\n};\n\n/**\n * Normalize YouTube URL to standard format\n * @param {string} url - YouTube URL\n * @returns {string|null} - Normalized URL or null if invalid\n */\nexport const normalizeYouTubeUrl = (url) => {\n  const videoId = getYouTubeVideoId(url);\n  if (!videoId) return null;\n  return getYouTubeWatchUrl(videoId);\n};\n\n/**\n * Get video metadata (title, duration) from YouTube\n * Note: This requires YouTube Data API v3\n * @param {string} videoId - YouTube video ID\n * @param {string} apiKey - YouTube API key\n * @returns {Promise<object>} - Video metadata\n */\nexport const getYouTubeVideoMetadata = async (videoId, apiKey) => {\n  if (!videoId || !apiKey) return null;\n  \n  try {\n    const response = await fetch(\n      `https://www.googleapis.com/youtube/v3/videos?id=${videoId}&key=${apiKey}&part=snippet,contentDetails`\n    );\n    \n    if (!response.ok) throw new Error('Failed to fetch video metadata');\n    \n    const data = await response.json();\n    \n    if (data.items && data.items.length > 0) {\n      const video = data.items[0];\n      return {\n        title: video.snippet.title,\n        description: video.snippet.description,\n        duration: video.contentDetails.duration,\n        channelTitle: video.snippet.channelTitle,\n        publishedAt: video.snippet.publishedAt,\n        thumbnail: video.snippet.thumbnails.maxres?.url || video.snippet.thumbnails.high?.url\n      };\n    }\n    \n    return null;\n  } catch (error) {\n    console.error('Error fetching YouTube video metadata:', error);\n    return null;\n  }\n};\n\n/**\n * Format duration from YouTube API format (PT4M13S) to readable format (4:13)\n * @param {string} duration - YouTube duration format\n * @returns {string} - Formatted duration\n */\nexport const formatYouTubeDuration = (duration) => {\n  if (!duration) return 'Unknown';\n  \n  const match = duration.match(/PT(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+)S)?/);\n  if (!match) return 'Unknown';\n  \n  const hours = parseInt(match[1] || 0);\n  const minutes = parseInt(match[2] || 0);\n  const seconds = parseInt(match[3] || 0);\n  \n  if (hours > 0) {\n    return `${hours}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n  } else {\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n  }\n};\n\n/**\n * Validate and process YouTube URL for form input\n * @param {string} url - YouTube URL\n * @returns {object} - Validation result with processed data\n */\nexport const processYouTubeUrl = (url) => {\n  const videoId = getYouTubeVideoId(url);\n  \n  if (!videoId) {\n    return {\n      isValid: false,\n      error: 'Invalid YouTube URL format',\n      videoId: null,\n      normalizedUrl: null,\n      thumbnail: null\n    };\n  }\n  \n  return {\n    isValid: true,\n    error: null,\n    videoId,\n    normalizedUrl: normalizeYouTubeUrl(url),\n    thumbnail: getYouTubeThumbnail(videoId),\n    embedUrl: getYouTubeEmbedUrl(videoId)\n  };\n};\n","import React, { useEffect, useState } from 'react';\nimport { useApp } from '../../../context/AppContext';\nimport { useMasterData } from '../../../hooks/useMasterData';\nimport { useMasterDataForm } from '../../../hooks/useMasterDataForm';\nimport { getCourseTypesCached } from '../../../services/globalApiCache';\nimport { validateFileType } from '../../../utils/documentUtils';\nimport {\n    getYouTubeEmbedUrl,\n    getYouTubeThumbnail,\n    getYouTubeVideoId,\n    isValidYouTubeUrl,\n    normalizeYouTubeUrl\n} from '../../../utils/youtubeUtils';\nimport DocumentPreviewModal from '../DocumentPreviewModal';\nimport '../MasterDataComponent.css';\nimport VideoPreviewModal from '../VideoPreviewModal';\n\n/**\n * Chapter Form Component\n * Handles the form UI and logic for creating/editing chapters\n */\nconst ChapterForm = ({ \n  onSubmit, \n  onCancel, \n  editingChapter = null, \n  loading = false \n}) => {\n  const { token, addNotification } = useApp();\n  const { getCourseTypeName } = useMasterData();\n  const [courseTypes, setCourseTypes] = useState([]);\n  \n  // YouTube link management\n  const [youtubeLinkInput, setYoutubeLinkInput] = useState('');\n  const [youtubeLinkError, setYoutubeLinkError] = useState('');\n  const [draggedIndex, setDraggedIndex] = useState(null);\n  \n  // Document upload management\n  const [fileInputs, setFileInputs] = useState([]);\n  const [fileInputError, setFileInputError] = useState('');\n  const [uploadedFileObjects, setUploadedFileObjects] = useState({});\n  \n  // Preview modals\n  const [videoPreviewModal, setVideoPreviewModal] = useState(false);\n  const [selectedVideoData, setSelectedVideoData] = useState(null);\n  const [documentPreviewModal, setDocumentPreviewModal] = useState(false);\n  const [selectedDocumentData, setSelectedDocumentData] = useState(null);\n\n  // Form configuration\n  const initialFormData = {\n    name: '',\n    description: '',\n    displayOrder: '',\n    isActive: true,\n    courseTypeId: '',\n    courseId: '',\n    classId: '',\n    examId: '',\n    subjectId: '',\n    topicId: '',\n    moduleId: '',\n    youtubeLinks: [],\n    youtubeTitles: [],\n    uploadedFiles: [],\n    uploadedFileTitles: [],\n    uploadedFilePaths: []\n  };\n\n  const validationRules = {\n    name: (value) => !value ? 'Name is required' : '',\n    description: (value) => !value ? 'Description is required' : '',\n    courseTypeId: (value) => !value ? 'Course Type is required' : '',\n    subjectId: (value) => !value ? 'Subject is required' : '',\n    topicId: (value) => !value ? 'Topic is required' : '',\n    moduleId: (value) => !value ? 'Module is required' : ''\n  };\n\n  // Use the master data form hook\n  const {\n    formData,\n    errors,\n    touched,\n    handleInputChange,\n    handleBlur,\n    handleSubmit,\n    formFilteredCourses,\n    formFilteredClasses,\n    formFilteredExams,\n    formFilteredSubjects,\n    formFilteredTopics,\n    formFilteredModules,\n    formLoadingStates,\n    isAcademicCourseType,\n    isCompetitiveCourseType,\n    setFormData,\n    resetForm\n  } = useMasterDataForm(initialFormData, validationRules, onSubmit);\n\n  // Load course types on mount\n  useEffect(() => {\n    const loadCourseTypes = async () => {\n      if (!token) return;\n      try {\n        const data = await getCourseTypesCached(token);\n        console.log('Raw courseTypes API response (ChapterForm):', data);\n        console.log('CourseTypes data type:', typeof data);\n        console.log('CourseTypes is array:', Array.isArray(data));\n        \n        // Handle different response formats\n        let courseTypesArray = [];\n        if (Array.isArray(data)) {\n          courseTypesArray = data;\n        } else if (data && Array.isArray(data.content)) {\n          // Handle paginated response\n          courseTypesArray = data.content;\n        } else if (data && Array.isArray(data.data)) {\n          // Handle wrapped response\n          courseTypesArray = data.data;\n        } else if (data && data.courseTypes && Array.isArray(data.courseTypes)) {\n          // Handle nested response\n          courseTypesArray = data.courseTypes;\n        } else {\n          console.warn('Unexpected courseTypes data format (ChapterForm):', data);\n          courseTypesArray = [];\n        }\n        \n        console.log('Processed courseTypes array (ChapterForm):', courseTypesArray);\n        setCourseTypes(courseTypesArray);\n      } catch (error) {\n        console.error('Error loading course types:', error);\n      }\n    };\n    loadCourseTypes();\n  }, [token]);\n\n  // Populate form when editing\n  useEffect(() => {\n    if (editingChapter) {\n      console.log('Editing chapter:', editingChapter);\n      \n      // Reset form first to clear any existing data\n      console.log('ChapterForm - Resetting form before populating with editing data');\n      resetForm();\n      \n      // Extract videos data\n      const youtubeLinks = [];\n      const youtubeTitles = [];\n      if (editingChapter.videos && Array.isArray(editingChapter.videos)) {\n        console.log('ChapterForm - Extracting videos from editingChapter.videos:', editingChapter.videos);\n        editingChapter.videos.forEach((video, index) => {\n          console.log(`Video ${index}:`, video);\n          youtubeLinks.push(video.youtubeLink || '');\n          youtubeTitles.push(video.videoTitle || '');\n        });\n      } else if (editingChapter.youtubeLinks && Array.isArray(editingChapter.youtubeLinks)) {\n        console.log('ChapterForm - Using legacy youtubeLinks:', editingChapter.youtubeLinks);\n        editingChapter.youtubeLinks.forEach((link, index) => {\n          youtubeLinks.push(link);\n          youtubeTitles.push(editingChapter.youtubeTitles?.[index] || `Video ${index + 1}`);\n        });\n      }\n      \n      console.log('ChapterForm - Extracted youtubeLinks:', youtubeLinks);\n      console.log('ChapterForm - Extracted youtubeTitles:', youtubeTitles);\n\n      // Extract documents data\n      const uploadedFiles = [];\n      const uploadedFileTitles = [];\n      const uploadedFilePaths = [];\n      if (editingChapter.documents && Array.isArray(editingChapter.documents)) {\n        editingChapter.documents.forEach(doc => {\n          uploadedFiles.push(doc.fileName || '');\n          uploadedFileTitles.push(doc.documentTitle || '');\n          uploadedFilePaths.push(doc.filePath || '');\n        });\n      }\n\n      // Populate form with chapter data\n      setFormData({\n        name: editingChapter.name || '',\n        description: editingChapter.description || '',\n        displayOrder: editingChapter.displayOrder || '',\n        isActive: editingChapter.isActive !== undefined ? editingChapter.isActive : true,\n        courseTypeId: editingChapter.topic?.subject?.courseTypeId || editingChapter.module?.topic?.subject?.courseTypeId || '',\n        courseId: editingChapter.topic?.subject?.courseId || editingChapter.module?.topic?.subject?.courseId || '',\n        classId: editingChapter.topic?.subject?.classId || editingChapter.module?.topic?.subject?.classId || '',\n        examId: editingChapter.topic?.subject?.examId || editingChapter.module?.topic?.subject?.examId || '',\n        subjectId: editingChapter.topic?.subject?.subjectId || editingChapter.module?.topic?.subject?.id || '',\n        topicId: editingChapter.topic?.id || editingChapter.module?.topic?.id || '',\n        moduleId: editingChapter.moduleId || '',\n        youtubeLinks: youtubeLinks,\n        youtubeTitles: youtubeTitles,\n        uploadedFiles: uploadedFiles,\n        uploadedFileTitles: uploadedFileTitles,\n        uploadedFilePaths: uploadedFilePaths\n      });\n\n      // Note: Errors and touched state will be cleared automatically when user interacts with form\n    }\n  }, [editingChapter]);\n\n  const handleFormSubmit = async (e) => {\n    e.preventDefault();\n    \n    // Merge uploadedFileObjects with the form data\n    const formDataWithFiles = {\n      ...formData,\n      uploadedFileObjects: uploadedFileObjects\n    };\n    \n    // Call the parent's onSubmit with the complete form data\n    await onSubmit(formDataWithFiles);\n  };\n\n  // YouTube Link Management Functions\n  const addYoutubeLink = () => {\n    const url = youtubeLinkInput.trim();\n    if (!url) {\n      setYoutubeLinkError('YouTube link cannot be empty');\n      return;\n    }\n\n    if (!isValidYouTubeUrl(url)) {\n      setYoutubeLinkError('Invalid YouTube URL format');\n      return;\n    }\n\n    const normalizedUrl = normalizeYouTubeUrl(url);\n    const currentLinks = formData.youtubeLinks || [];\n    const currentTitles = formData.youtubeTitles || [];\n    \n    console.log('ChapterForm - Adding YouTube link:', {\n      url,\n      normalizedUrl,\n      currentLinks,\n      currentTitles,\n      editingChapter: !!editingChapter\n    });\n    \n    // Check for duplicates\n    if (currentLinks.some(link => normalizeYouTubeUrl(link) === normalizedUrl)) {\n      setYoutubeLinkError('This video is already added');\n      console.log('ChapterForm - Duplicate video detected:', normalizedUrl);\n      return;\n    }\n\n    // Get video title from YouTube or use default\n    const videoId = getYouTubeVideoId(normalizedUrl);\n    const defaultTitle = `Video ${currentLinks.length + 1}`;\n    \n    handleInputChange('youtubeLinks', [...currentLinks, normalizedUrl]);\n    handleInputChange('youtubeTitles', [...currentTitles, defaultTitle]);\n    setYoutubeLinkInput('');\n    setYoutubeLinkError('');\n  };\n\n  const removeYoutubeLink = (index) => {\n    const currentLinks = formData.youtubeLinks || [];\n    const currentTitles = formData.youtubeTitles || [];\n    handleInputChange('youtubeLinks', currentLinks.filter((_, i) => i !== index));\n    handleInputChange('youtubeTitles', currentTitles.filter((_, i) => i !== index));\n  };\n\n  const editYoutubeLink = (index, currentUrl) => {\n    const newUrl = prompt('Edit YouTube URL:', currentUrl);\n    if (newUrl && newUrl.trim() && isValidYouTubeUrl(newUrl.trim())) {\n      const normalizedUrl = normalizeYouTubeUrl(newUrl.trim());\n      const currentLinks = formData.youtubeLinks || [];\n      \n      // Check for duplicates (excluding the current index)\n      const otherLinks = currentLinks.filter((_, i) => i !== index);\n      if (otherLinks.some(link => normalizeYouTubeUrl(link) === normalizedUrl)) {\n        setYoutubeLinkError('This video is already added');\n        return;\n      }\n      \n      setYoutubeLinkError('');\n      const newLinks = [...currentLinks];\n      newLinks[index] = normalizedUrl;\n      handleInputChange('youtubeLinks', newLinks);\n    }\n  };\n\n  const editYoutubeTitle = (index, currentTitle) => {\n    const newTitle = prompt('Edit Video Title:', currentTitle);\n    if (newTitle && newTitle.trim()) {\n      const currentTitles = formData.youtubeTitles || [];\n      const newTitles = [...currentTitles];\n      newTitles[index] = newTitle.trim();\n      handleInputChange('youtubeTitles', newTitles);\n    }\n  };\n\n  const handleYoutubeLinkInputChange = (e) => {\n    const value = e.target.value;\n    setYoutubeLinkInput(value);\n    \n    // Clear error when user starts typing\n    if (youtubeLinkError) {\n      setYoutubeLinkError('');\n    }\n    \n    // Real-time validation\n    if (value.trim() && !isValidYouTubeUrl(value)) {\n      setYoutubeLinkError('Invalid YouTube URL format');\n    }\n  };\n\n  const handleYoutubeLinkInputKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      addYoutubeLink();\n    }\n  };\n\n  const openVideoPreview = (embedUrl, originalUrl, videoTitle = null) => {\n    const videoId = getYouTubeVideoId(originalUrl);\n    setSelectedVideoData({\n      videoId,\n      videoUrl: originalUrl,\n      embedUrl,\n      title: videoTitle || `Video Preview`\n    });\n    setVideoPreviewModal(true);\n  };\n\n  // Document Upload Management Functions\n  const addFileInput = () => {\n    setFileInputs(prev => [...prev, { id: Date.now(), file: null }]);\n  };\n\n  const handleFileChange = (inputId, file) => {\n    if (!file) return;\n\n    const validation = validateFileType(file.name);\n    if (!validation.isValid) {\n      setFileInputError(validation.error);\n      return;\n    }\n\n    // Check for duplicate file names\n    const currentFiles = formData.uploadedFiles || [];\n    if (currentFiles.includes(file.name)) {\n      setFileInputError(`File \"${file.name}\" is already uploaded`);\n      return;\n    }\n\n    setFileInputError('');\n    \n    // Add file to the uploadedFiles array\n    const currentTitles = formData.uploadedFileTitles || [];\n    const currentPaths = formData.uploadedFilePaths || [];\n    const newFiles = [...currentFiles, file.name];\n    const defaultTitle = file.name.replace(/\\.[^/.]+$/, \"\"); // Remove file extension\n    const newTitles = [...currentTitles, defaultTitle];\n    const newPaths = [...currentPaths, '']; // Empty path for new uploads\n    \n    handleInputChange('uploadedFiles', newFiles);\n    handleInputChange('uploadedFileTitles', newTitles);\n    handleInputChange('uploadedFilePaths', newPaths);\n    \n    // Store the actual file object for preview\n    setUploadedFileObjects(prev => ({\n      ...prev,\n      [file.name]: file\n    }));\n    \n    // Update file input state\n    setFileInputs(prev => prev.map(input => \n      input.id === inputId ? { ...input, file } : input\n    ));\n  };\n\n  const removeFileInput = (inputId) => {\n    setFileInputs(prev => prev.filter(input => input.id !== inputId));\n  };\n\n  const removeUploadedFile = (index) => {\n    const currentFiles = formData.uploadedFiles || [];\n    const currentTitles = formData.uploadedFileTitles || [];\n    const currentPaths = formData.uploadedFilePaths || [];\n    const fileNameToRemove = currentFiles[index];\n    const newFiles = currentFiles.filter((_, i) => i !== index);\n    const newTitles = currentTitles.filter((_, i) => i !== index);\n    const newPaths = currentPaths.filter((_, i) => i !== index);\n    \n    handleInputChange('uploadedFiles', newFiles);\n    handleInputChange('uploadedFileTitles', newTitles);\n    handleInputChange('uploadedFilePaths', newPaths);\n    \n    // Remove the file object as well\n    setUploadedFileObjects(prev => {\n      const newObjects = { ...prev };\n      delete newObjects[fileNameToRemove];\n      return newObjects;\n    });\n  };\n\n  const editUploadedFileTitle = (index, currentTitle) => {\n    const newTitle = prompt('Edit Document Title:', currentTitle);\n    if (newTitle && newTitle.trim()) {\n      const currentTitles = formData.uploadedFileTitles || [];\n      const newTitles = [...currentTitles];\n      newTitles[index] = newTitle.trim();\n      handleInputChange('uploadedFileTitles', newTitles);\n    }\n  };\n\n  const openDocumentPreview = (fileName, index = null) => {\n    let filePath = null;\n    \n    // If editing existing chapter, get file path from form data\n    if (editingChapter && formData.uploadedFilePaths && formData.uploadedFilePaths[index]) {\n      filePath = formData.uploadedFilePaths[index];\n    }\n    \n    // Get the actual file object if available (for new uploads)\n    const fileObject = uploadedFileObjects[fileName];\n    \n    setSelectedDocumentData({ fileName, filePath, fileObject });\n    setDocumentPreviewModal(true);\n  };\n\n  const closeVideoPreview = () => {\n    setVideoPreviewModal(false);\n    setSelectedVideoData(null);\n  };\n\n  const closeDocumentPreview = () => {\n    setDocumentPreviewModal(false);\n    setSelectedDocumentData(null);\n  };\n\n  return (\n    <div className=\"form-section\">\n      <div className=\"form-header\">\n        <h3>{editingChapter ? 'Edit Chapter' : 'Create New Chapter'}</h3>\n        <div className=\"form-header-actions\">\n          <button \n            type=\"button\" \n            className=\"btn btn-outline btn-sm\" \n            onClick={onCancel}\n            disabled={loading}\n          >\n            Cancel\n          </button>\n        </div>\n      </div>\n\n      <form onSubmit={handleFormSubmit} className=\"master-data-form\">\n        {/* Basic Information */}\n        <div className=\"form-row\">\n          <div className=\"form-group\">\n            <label htmlFor=\"name\">Chapter Name *</label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              value={formData.name}\n              onChange={(e) => handleInputChange('name', e.target.value)}\n              onBlur={() => handleBlur('name')}\n              className={`form-input ${errors.name && touched.name ? 'error' : ''}`}\n              required\n              placeholder=\"e.g., Introduction to Addition, Advanced Concepts\"\n            />\n            {errors.name && touched.name && <span className=\"error-message\">{errors.name}</span>}\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"displayOrder\">Display Order</label>\n            <input\n              type=\"number\"\n              id=\"displayOrder\"\n              name=\"displayOrder\"\n              value={formData.displayOrder}\n              onChange={(e) => handleInputChange('displayOrder', e.target.value)}\n              className=\"form-input\"\n              placeholder=\"Order in which chapter appears\"\n            />\n          </div>\n        </div>\n\n        {/* Description */}\n        <div className=\"form-row\">\n          <div className=\"form-group full-width\">\n            <label htmlFor=\"description\">Description *</label>\n            <textarea\n              id=\"description\"\n              name=\"description\"\n              value={formData.description}\n              onChange={(e) => handleInputChange('description', e.target.value)}\n              onBlur={() => handleBlur('description')}\n              className={`form-textarea ${errors.description && touched.description ? 'error' : ''}`}\n              required\n              rows={3}\n              placeholder=\"Describe what this chapter covers...\"\n            />\n            {errors.description && touched.description && (\n              <span className=\"error-message\">{errors.description}</span>\n            )}\n          </div>\n        </div>\n\n        {/* Course Type Selection */}\n        <div className=\"form-row\">\n          <div className=\"form-group\">\n            <label htmlFor=\"courseTypeId\">Course Type *</label>\n            <select\n              id=\"courseTypeId\"\n              name=\"courseTypeId\"\n              value={formData.courseTypeId}\n              onChange={(e) => {\n                handleInputChange('courseTypeId', e.target.value);\n                // Reset dependent fields\n                handleInputChange('courseId', '');\n                handleInputChange('classId', '');\n                handleInputChange('examId', '');\n                handleInputChange('subjectId', '');\n                handleInputChange('topicId', '');\n                handleInputChange('moduleId', '');\n              }}\n              onBlur={() => handleBlur('courseTypeId')}\n              className={`form-select ${errors.courseTypeId && touched.courseTypeId ? 'error' : ''}`}\n              required\n            >\n              <option value=\"\">Select Course Type</option>\n              {courseTypes.map(courseType => (\n                <option key={courseType.id} value={courseType.id}>\n                  {courseType.name}\n                </option>\n              ))}\n            </select>\n            {errors.courseTypeId && touched.courseTypeId && (\n              <span className=\"error-message\">{errors.courseTypeId}</span>\n            )}\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"courseId\">Course *</label>\n            <select\n              id=\"courseId\"\n              name=\"courseId\"\n              value={formData.courseId}\n              onChange={(e) => {\n                handleInputChange('courseId', e.target.value);\n                // Reset dependent fields\n                handleInputChange('classId', '');\n                handleInputChange('examId', '');\n                handleInputChange('subjectId', '');\n                handleInputChange('topicId', '');\n                handleInputChange('moduleId', '');\n              }}\n              className={`form-select ${errors.courseId && touched.courseId ? 'error' : ''}`}\n              required\n              disabled={!formData.courseTypeId || formLoadingStates.courses}\n            >\n              <option value=\"\">Select Course</option>\n              {formFilteredCourses.map(course => (\n                <option key={course.id} value={course.id}>\n                  {course.name}\n                </option>\n              ))}\n            </select>\n            {errors.courseId && touched.courseId && (\n              <span className=\"error-message\">{errors.courseId}</span>\n            )}\n          </div>\n        </div>\n\n        {/* Class/Exam Selection */}\n        <div className=\"form-row\">\n          {isAcademicCourseType(formData.courseTypeId) && (\n            <div className=\"form-group\">\n              <label htmlFor=\"classId\">Class *</label>\n              <select\n                id=\"classId\"\n                name=\"classId\"\n                value={formData.classId}\n                onChange={(e) => {\n                  handleInputChange('classId', e.target.value);\n                  // Reset dependent fields\n                  handleInputChange('subjectId', '');\n                  handleInputChange('topicId', '');\n                  handleInputChange('moduleId', '');\n                }}\n                className={`form-select ${errors.classId && touched.classId ? 'error' : ''}`}\n                required\n                disabled={!formData.courseId || formLoadingStates.classes}\n              >\n                <option value=\"\">Select Class</option>\n                {formFilteredClasses.map(classItem => (\n                  <option key={classItem.id} value={classItem.id}>\n                    {classItem.name}\n                  </option>\n                ))}\n              </select>\n              {errors.classId && touched.classId && (\n                <span className=\"error-message\">{errors.classId}</span>\n              )}\n            </div>\n          )}\n\n          {isCompetitiveCourseType(formData.courseTypeId) && (\n            <div className=\"form-group\">\n              <label htmlFor=\"examId\">Exam *</label>\n              <select\n                id=\"examId\"\n                name=\"examId\"\n                value={formData.examId}\n                onChange={(e) => {\n                  handleInputChange('examId', e.target.value);\n                  // Reset dependent fields\n                  handleInputChange('subjectId', '');\n                  handleInputChange('topicId', '');\n                  handleInputChange('moduleId', '');\n                }}\n                className={`form-select ${errors.examId && touched.examId ? 'error' : ''}`}\n                required\n                disabled={!formData.courseId || formLoadingStates.exams}\n              >\n                <option value=\"\">Select Exam</option>\n                {formFilteredExams.map(exam => (\n                  <option key={exam.id} value={exam.id}>\n                    {exam.name}\n                  </option>\n                ))}\n              </select>\n              {errors.examId && touched.examId && (\n                <span className=\"error-message\">{errors.examId}</span>\n              )}\n            </div>\n          )}\n        </div>\n\n        {/* Subject Selection */}\n        <div className=\"form-row\">\n          <div className=\"form-group\">\n            <label htmlFor=\"subjectId\">Subject *</label>\n            <select\n              id=\"subjectId\"\n              name=\"subjectId\"\n              value={formData.subjectId}\n              onChange={(e) => {\n                handleInputChange('subjectId', e.target.value);\n                // Reset dependent fields\n                handleInputChange('topicId', '');\n                handleInputChange('moduleId', '');\n              }}\n              className={`form-select ${errors.subjectId && touched.subjectId ? 'error' : ''}`}\n              required\n              disabled={!formData.courseId || formLoadingStates.subjects}\n            >\n              <option value=\"\">Select Subject</option>\n              {formFilteredSubjects.map(subject => (\n                <option key={subject.linkageId || subject.id} value={subject.linkageId || subject.id}>\n                  {subject.subjectName || subject.name}\n                </option>\n              ))}\n            </select>\n            {errors.subjectId && touched.subjectId && (\n              <span className=\"error-message\">{errors.subjectId}</span>\n            )}\n          </div>\n        </div>\n\n        {/* Topic Selection */}\n        <div className=\"form-row\">\n          <div className=\"form-group\">\n            <label htmlFor=\"topicId\">Topic *</label>\n            <select\n              id=\"topicId\"\n              name=\"topicId\"\n              value={formData.topicId}\n              onChange={(e) => {\n                handleInputChange('topicId', e.target.value);\n                // Reset dependent fields\n                handleInputChange('moduleId', '');\n              }}\n              className={`form-select ${errors.topicId && touched.topicId ? 'error' : ''}`}\n              required\n              disabled={!formData.subjectId || formLoadingStates.topics}\n            >\n              <option value=\"\">Select Topic</option>\n              {formFilteredTopics.map(topic => (\n                <option key={topic.id} value={topic.id}>\n                  {topic.name}\n                </option>\n              ))}\n            </select>\n            {errors.topicId && touched.topicId && (\n              <span className=\"error-message\">{errors.topicId}</span>\n            )}\n          </div>\n        </div>\n\n        {/* Module Selection */}\n        <div className=\"form-row\">\n          <div className=\"form-group\">\n            <label htmlFor=\"moduleId\">Module *</label>\n            <select\n              id=\"moduleId\"\n              name=\"moduleId\"\n              value={formData.moduleId}\n              onChange={(e) => handleInputChange('moduleId', e.target.value)}\n              className={`form-select ${errors.moduleId && touched.moduleId ? 'error' : ''}`}\n              required\n              disabled={!formData.topicId || formLoadingStates.modules}\n            >\n              <option value=\"\">Select Module</option>\n              {formFilteredModules.map(module => (\n                <option key={module.id} value={module.id}>\n                  {module.name}\n                </option>\n              ))}\n            </select>\n            {errors.moduleId && touched.moduleId && (\n              <span className=\"error-message\">{errors.moduleId}</span>\n            )}\n          </div>\n        </div>\n\n        {/* YouTube Links Section */}\n        <div className=\"form-section youtube-section\">\n          <h4>📺 YouTube Video Links</h4>\n          \n          {/* Add Link Input */}\n          <div className=\"form-row\">\n            <div className=\"form-group full-width\">\n              <label htmlFor=\"youtube-link\">Add YouTube Link</label>\n              <div className=\"simple-input-group\">\n                <input\n                  type=\"url\"\n                  id=\"youtube-link\"\n                  value={youtubeLinkInput}\n                  onChange={handleYoutubeLinkInputChange}\n                  onKeyPress={handleYoutubeLinkInputKeyPress}\n                  placeholder=\"https://www.youtube.com/watch?v=...\"\n                  className={`form-input ${youtubeLinkError ? 'error' : ''}`}\n                />\n                <button\n                  type=\"button\"\n                  onClick={addYoutubeLink}\n                  className=\"btn btn-outline btn-sm\"\n                  disabled={!youtubeLinkInput.trim() || !!youtubeLinkError}\n                >\n                  Add\n                </button>\n              </div>\n              {youtubeLinkError && (\n                <small className=\"form-error\">{youtubeLinkError}</small>\n              )}\n            </div>\n          </div>\n          \n          {/* Video List */}\n          {formData.youtubeLinks && formData.youtubeLinks.length > 0 && (\n            <div className=\"simple-video-list\">\n              <h5>Added Videos ({formData.youtubeLinks.length})</h5>\n              {formData.youtubeLinks.map((link, index) => {\n                const currentTitles = formData.youtubeTitles || [];\n                const videoTitle = currentTitles[index] || `Video ${index + 1}`;\n                return (\n                  <div key={`${link}-${index}`} className=\"simple-video-item\">\n                    <div className=\"video-thumbnail-small\" onClick={() => openVideoPreview(getYouTubeEmbedUrl(getYouTubeVideoId(link)), link, videoTitle)}>\n                      <img \n                        src={getYouTubeThumbnail(getYouTubeVideoId(link), 'default')} \n                        alt={videoTitle}\n                        onError={(e) => {\n                          e.target.style.display = 'none';\n                        }}\n                      />\n                      <div className=\"play-overlay-small\">\n                        <span>▶️</span>\n                      </div>\n                    </div>\n                    <div className=\"video-info-small\">\n                      <div className=\"video-title-small\">\n                        <strong>{videoTitle}</strong>\n                      </div>\n                      <div className=\"video-url-small\" title={link}>{link}</div>\n                      <div className=\"video-actions-small\">\n                        <button \n                          type=\"button\"\n                          onClick={() => openVideoPreview(getYouTubeEmbedUrl(getYouTubeVideoId(link)), link, videoTitle)}\n                          className=\"btn btn-outline btn-xs\"\n                          title=\"Preview video\"\n                        >\n                          Preview\n                        </button>\n                        <button \n                          type=\"button\"\n                          onClick={() => editYoutubeTitle(index, videoTitle)}\n                          className=\"btn btn-outline btn-xs\"\n                          title=\"Edit title\"\n                        >\n                          Edit Title\n                        </button>\n                        <button \n                          type=\"button\"\n                          onClick={() => editYoutubeLink(index, link)}\n                          className=\"btn btn-outline btn-xs\"\n                          title=\"Edit URL\"\n                        >\n                          Edit URL\n                        </button>\n                        <button \n                          type=\"button\"\n                          onClick={() => removeYoutubeLink(index)}\n                          className=\"btn btn-danger btn-xs\"\n                          title=\"Remove video\"\n                        >\n                          Remove\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          )}\n        </div>\n\n        {/* Document Upload Section */}\n        <div className=\"form-section document-section\">\n          <h4>📕 PDF Documents</h4>\n          \n          {/* PDF Upload Interface */}\n          <div className=\"form-row\">\n            <div className=\"form-group full-width\">\n              <label>Upload PDF Document</label>\n              <div className=\"pdf-upload-container\">\n                <input\n                  type=\"file\"\n                  id=\"pdf-upload\"\n                  accept=\".pdf\"\n                  onChange={(e) => {\n                    const file = e.target.files[0];\n                    if (file) {\n                      const validation = validateFileType(file.name);\n                      \n                      if (!validation.isValid) {\n                        setFileInputError(validation.error);\n                        return;\n                      }\n                      \n                      // Check for duplicate file names\n                      const currentFiles = formData.uploadedFiles || [];\n                      if (currentFiles.includes(file.name)) {\n                        setFileInputError(`File \"${file.name}\" is already uploaded`);\n                        return;\n                      }\n                      \n                      setFileInputError('');\n                      \n                      // Add file to the uploadedFiles array\n                      const currentTitles = formData.uploadedFileTitles || [];\n                      const currentPaths = formData.uploadedFilePaths || [];\n                      const newFiles = [...currentFiles, file.name];\n                      const defaultTitle = file.name.replace(/\\.[^/.]+$/, \"\"); // Remove file extension\n                      const newTitles = [...currentTitles, defaultTitle];\n                      const newPaths = [...currentPaths, '']; // Empty path for new uploads\n                      \n                      handleInputChange('uploadedFiles', newFiles);\n                      handleInputChange('uploadedFileTitles', newTitles);\n                      handleInputChange('uploadedFilePaths', newPaths);\n                      \n                      // Store the actual file object for preview\n                      setUploadedFileObjects(prev => ({\n                        ...prev,\n                        [file.name]: file\n                      }));\n                      \n                      // Reset the input\n                      e.target.value = '';\n                    }\n                  }}\n                  style={{ display: 'none' }}\n                />\n                <button\n                  type=\"button\"\n                  onClick={() => document.getElementById('pdf-upload').click()}\n                  className=\"btn btn-primary pdf-upload-btn\"\n                  disabled={loading}\n                >\n                  Choose PDF File\n                </button>\n                <span className=\"upload-hint\">or drag and drop PDF here</span>\n              </div>\n              {fileInputError && (\n                <small className=\"form-error\">{fileInputError}</small>\n              )}\n              <small className=\"form-help\">\n                Only PDF files are supported. Maximum file size: 10MB\n              </small>\n            </div>\n          </div>\n          \n          {/* PDF Documents List */}\n          {formData.uploadedFiles && formData.uploadedFiles.length > 0 && (\n            <div className=\"simple-document-list\">\n              <h5>📕 PDF Documents ({formData.uploadedFiles.length})</h5>\n              {formData.uploadedFiles.map((fileName, index) => {\n                const currentTitles = formData.uploadedFileTitles || [];\n                const documentTitle = currentTitles[index] || fileName.replace(/\\.[^/.]+$/, \"\");\n                return (\n                  <div key={`${fileName}-${index}`} className=\"simple-document-item\">\n                    <div className=\"document-icon\">📄</div>\n                    <div className=\"document-info-small\">\n                      <div className=\"document-title-small\">\n                        <strong>{documentTitle}</strong>\n                      </div>\n                      <div className=\"document-filename-small\" title={fileName}>{fileName}</div>\n                      <div className=\"document-actions-small\">\n                        <button \n                          type=\"button\"\n                          onClick={() => openDocumentPreview(fileName, index)}\n                          className=\"btn btn-outline btn-xs\"\n                          title=\"Preview document\"\n                        >\n                          Preview\n                        </button>\n                        <button \n                          type=\"button\"\n                          onClick={() => editUploadedFileTitle(index, documentTitle)}\n                          className=\"btn btn-outline btn-xs\"\n                          title=\"Edit title\"\n                        >\n                          Edit Title\n                        </button>\n                        <button \n                          type=\"button\"\n                          onClick={() => removeUploadedFile(index)}\n                          className=\"btn btn-danger btn-xs\"\n                          title=\"Remove document\"\n                        >\n                          Remove\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          )}\n        </div>\n\n        {/* Status */}\n        <div className=\"form-row\">\n          <div className=\"form-group\">\n            <label className=\"checkbox-label\">\n              <input\n                type=\"checkbox\"\n                name=\"isActive\"\n                checked={formData.isActive}\n                onChange={(e) => handleInputChange('isActive', e.target.checked)}\n                className=\"checkbox-input\"\n              />\n              <span className=\"checkbox-text\">Active</span>\n            </label>\n          </div>\n        </div>\n\n        {/* Form Actions */}\n        <div className=\"form-actions\">\n          <button \n            type=\"submit\" \n            className=\"btn btn-primary\"\n            disabled={loading}\n          >\n            {loading ? 'Saving...' : (editingChapter ? 'Update Chapter' : 'Create Chapter')}\n          </button>\n          <button \n            type=\"button\" \n            className=\"btn btn-outline\"\n            onClick={onCancel}\n            disabled={loading}\n          >\n            Cancel\n          </button>\n        </div>\n      </form>\n      \n      {/* Video Preview Modal */}\n      <VideoPreviewModal\n        isOpen={videoPreviewModal}\n        onClose={closeVideoPreview}\n        embedUrl={selectedVideoData?.embedUrl}\n        watchUrl={selectedVideoData?.videoUrl}\n        videoTitle={selectedVideoData?.title || 'Video Preview'}\n      />\n      \n      {/* Document Preview Modal */}\n      <DocumentPreviewModal\n        isOpen={documentPreviewModal}\n        onClose={closeDocumentPreview}\n        fileName={selectedDocumentData?.fileName}\n        filePath={selectedDocumentData?.filePath}\n        fileObject={selectedDocumentData?.fileObject}\n        fileType=\"Document Preview\"\n      />\n    </div>\n  );\n};\n\nexport default ChapterForm;\n","import React, { useState } from 'react';\nimport { getFileIcon } from '../../utils/documentUtils';\nimport { getYouTubeEmbedUrl, getYouTubeThumbnail, getYouTubeVideoId } from '../../utils/youtubeUtils';\nimport './ChapterListCard.css';\n\nconst ChapterListCard = ({ \n  chapter, \n  onEdit, \n  onDelete, \n  onPreviewVideo,\n  onPreviewDocument \n}) => {\n  const [showDetails, setShowDetails] = useState(false);\n  \n  const {\n    id,\n    name,\n    description,\n    displayOrder,\n    isActive,\n    createdAt,\n    updatedAt,\n    createdByName,\n    updatedByName,\n    moduleName,\n    subjectName,\n    videos = [], // New API format: array of video objects\n    documents = [], // New API format: array of document objects\n    youtubeLinks = [], // Keep for backward compatibility\n    uploadedFiles = [] // Keep for backward compatibility\n  } = chapter;\n\n  const handleVideoPreview = (video, index) => {\n    // Handle both old format (videoUrl string) and new format (video object)\n    let videoUrl, videoTitle;\n    \n    if (typeof video === 'string') {\n      // Old format: youtubeLinks array with URL strings\n      videoUrl = video;\n      videoTitle = `Video ${index + 1}`;\n    } else {\n      // New format: videos array with video objects\n      videoUrl = video.youtubeLink;\n      videoTitle = video.videoTitle || `Video ${index + 1}`;\n    }\n    \n    // Clean the URL (remove quotes and whitespace)\n    const cleanUrl = videoUrl?.trim().replace(/^[\"']|[\"']$/g, '') || '';\n    \n    // Extract video ID from the cleaned URL\n    const videoId = getYouTubeVideoId(cleanUrl);\n    \n    if (!videoId) {\n      console.error('Invalid YouTube URL:', cleanUrl);\n      return;\n    }\n    \n    // Generate embed URL using the video ID\n    const embedUrl = getYouTubeEmbedUrl(videoId);\n    \n    console.log('ChapterListCard - Video preview requested:', {\n      originalUrl: videoUrl,\n      cleanUrl,\n      videoId,\n      embedUrl,\n      videoTitle,\n      chapterId: id,\n      chapterName: name,\n      videoObject: video\n    });\n    \n    onPreviewVideo({\n      videoUrl: cleanUrl,\n      embedUrl,\n      watchUrl: cleanUrl,  // Add watchUrl for the modal\n      index,\n      title: videoTitle\n    });\n  };\n\n  const handleDocumentPreview = (document, index) => {\n    // Handle both old format (filePath string) and new format (document object)\n    let fileName, filePath, documentTitle;\n    \n    if (typeof document === 'string') {\n      // Old format: uploadedFiles array with file paths\n      fileName = document.split('/').pop();\n      filePath = document;\n      documentTitle = fileName;\n    } else {\n      // New format: documents array with document objects\n      fileName = document.fileName || document.filePath?.split('/').pop() || `Document ${index + 1}`;\n      filePath = document.filePath || document.fileName;\n      documentTitle = document.documentTitle || fileName;\n    }\n    \n    console.log('ChapterListCard - Document preview requested:', {\n      fileName,\n      filePath,\n      documentTitle,\n      chapterId: id,\n      chapterName: name,\n      documentObject: document,\n      hasFilePath: !!filePath,\n      filePathType: typeof filePath\n    });\n    \n    onPreviewDocument({\n      fileName,\n      filePath: filePath,\n      fileObject: null, // No file object available from API\n      index,\n      title: documentTitle\n    });\n  };\n\n  const toggleDetails = () => {\n    setShowDetails(!showDetails);\n  };\n\n  return (\n    <div className=\"chapter-list-card\">\n      {/* Card Header */}\n      <div className=\"card-header\">\n        <div className=\"card-title\">\n          <h4>{name}</h4>\n          <div className=\"card-badges\">\n            <span className={`status-badge ${isActive ? 'active' : 'inactive'}`}>\n              {isActive ? 'Active' : 'Inactive'}\n            </span>\n            {displayOrder && (\n              <span className=\"order-badge\">\n                Order: {displayOrder}\n              </span>\n            )}\n          </div>\n        </div>\n        <div className=\"card-actions\">\n          <button \n            className=\"btn btn-outline btn-xs\"\n            onClick={() => onEdit(chapter)}\n            title=\"Edit Chapter\"\n          >\n            ✏️ Edit\n          </button>\n          <button \n            className=\"btn btn-danger btn-xs\"\n            onClick={() => onDelete(id)}\n            title=\"Delete Chapter\"\n          >\n            🗑️ Delete\n          </button>\n        </div>\n      </div>\n\n      {/* Card Content */}\n      <div className=\"card-content\">\n        {description && (\n          <p className=\"description\">{description}</p>\n        )}\n\n        {/* Multimedia Summary */}\n        <div className=\"multimedia-summary\">\n          <div className=\"summary-stats\">\n            {/* Count videos from both old and new formats */}\n            {(videos.length > 0 || youtubeLinks.length > 0) && (\n              <div className=\"stat-item\">\n                <span className=\"stat-icon\">🎬</span>\n                <span className=\"stat-text\">Videos ({videos.length || youtubeLinks.length})</span>\n              </div>\n            )}\n            {/* Count documents from both old and new formats */}\n            {(documents.length > 0 || uploadedFiles.length > 0) && (\n              <div className=\"stat-item\">\n                <span className=\"stat-icon\">📄</span>\n                <span className=\"stat-text\">Documents ({documents.length || uploadedFiles.length})</span>\n              </div>\n            )}\n          </div>\n          \n          {/* Show details button if any multimedia content exists */}\n          {((videos.length > 0 || youtubeLinks.length > 0) || (documents.length > 0 || uploadedFiles.length > 0)) && (\n            <button \n              className=\"btn btn-link btn-xs\"\n              onClick={toggleDetails}\n            >\n              {showDetails ? 'Hide Details' : 'Show Details'}\n            </button>\n          )}\n        </div>\n\n        {/* Detailed Multimedia Preview */}\n        {showDetails && (\n          <div className=\"multimedia-details\">\n            {/* Video Thumbnails */}\n            {(videos.length > 0 || youtubeLinks.length > 0) && (\n              <div className=\"media-section\">\n                <h5>🎬 YouTube Videos</h5>\n                <div className=\"video-thumbnails\">\n                  {/* Use videos array if available, otherwise fallback to youtubeLinks */}\n                  {(videos.length > 0 ? videos : youtubeLinks).map((video, index) => {\n                    let videoUrl, videoTitle;\n                    \n                    if (typeof video === 'string') {\n                      // Old format: youtubeLinks array with URL strings\n                      videoUrl = video;\n                      videoTitle = `Video ${index + 1}`;\n                    } else {\n                      // New format: videos array with video objects\n                      videoUrl = video.youtubeLink;\n                      videoTitle = video.videoTitle || `Video ${index + 1}`;\n                    }\n                    \n                    // Clean the URL (remove quotes and whitespace)\n                    const cleanUrl = videoUrl?.trim().replace(/^[\"']|[\"']$/g, '') || '';\n                    \n                    // Extract video ID for thumbnail\n                    const videoId = getYouTubeVideoId(cleanUrl);\n                    const thumbnailUrl = videoId ? getYouTubeThumbnail(videoId) : null;\n                    \n                    return (\n                      <div \n                        key={index}\n                        className=\"video-thumbnail\"\n                        onClick={() => handleVideoPreview(video, index)}\n                        title=\"Click to preview video\"\n                      >\n                        <img \n                          src={thumbnailUrl} \n                          alt={videoTitle}\n                          loading=\"lazy\"\n                        />\n                        <div className=\"play-overlay\">\n                          <span>▶️</span>\n                        </div>\n                        <div className=\"video-info\">\n                          <span>{videoTitle}</span>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            )}\n\n            {/* Document Icons */}\n            {(documents.length > 0 || uploadedFiles.length > 0) && (\n              <div className=\"media-section\">\n                <h5>📄 Documents</h5>\n                <div className=\"document-list\">\n                  {/* Use documents array if available, otherwise fallback to uploadedFiles */}\n                  {(documents.length > 0 ? documents : uploadedFiles).map((document, index) => {\n                    let fileName, documentTitle;\n                    \n                    if (typeof document === 'string') {\n                      // Old format: uploadedFiles array with file paths\n                      fileName = document.split('/').pop();\n                      documentTitle = fileName;\n                    } else {\n                      // New format: documents array with document objects\n                      fileName = document.fileName || document.filePath?.split('/').pop() || `Document ${index + 1}`;\n                      documentTitle = document.documentTitle || fileName;\n                    }\n                    \n                    const fileIcon = getFileIcon(fileName);\n                    return (\n                      <div \n                        key={index}\n                        className=\"document-item\"\n                        onClick={() => handleDocumentPreview(document, index)}\n                        title=\"Click to preview document\"\n                      >\n                        <div className=\"document-icon\">\n                          <span className=\"file-icon\">{fileIcon}</span>\n                          <div className=\"preview-overlay\">\n                            <span>📄</span>\n                          </div>\n                        </div>\n                        <div className=\"document-info\">\n                          <div className=\"document-name\" title={documentTitle}>{fileName}</div>\n                          {document.documentTitle && document.documentTitle !== fileName && (\n                            <div className=\"document-title\" title={document.documentTitle}>\n                              {document.documentTitle}\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n\n      {/* Card Footer */}\n      <div className=\"card-footer\">\n        <div className=\"footer-info\">\n          <small className=\"text-muted\">\n            Created: {new Date(createdAt).toLocaleDateString()}\n            {createdByName && ` by ${createdByName}`}\n          </small>\n          {updatedAt && updatedAt !== createdAt && (\n            <small className=\"text-muted\">\n              Updated: {new Date(updatedAt).toLocaleDateString()}\n              {updatedByName && ` by ${updatedByName}`}\n            </small>\n          )}\n        </div>\n        <div className=\"footer-meta\">\n          {moduleName && (\n            <small className=\"meta-item\">\n              📦 {moduleName}\n            </small>\n          )}\n          {subjectName && (\n            <small className=\"meta-item\">\n              📚 {subjectName}\n            </small>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ChapterListCard;\n","import React, { useEffect, useState } from 'react';\nimport { useApp } from '../../../context/AppContext';\nimport { useMasterData } from '../../../hooks/useMasterData';\nimport { getCourseTypesCached } from '../../../services/globalApiCache';\nimport ChapterListCard from '../ChapterListCard';\nimport '../MasterDataComponent.css';\n\n/**\n * Chapter List Component\n * Handles the display of chapters with filtering and actions\n */\nconst ChapterList = ({ \n  filters, \n  onEdit, \n  onDelete, \n  onPreviewVideo,\n  onPreviewDocument,\n  loading = false,\n  chapters = []\n}) => {\n  const { token, addNotification } = useApp();\n  const { getCourseTypeName, getCourseName } = useMasterData();\n  const [courseTypes, setCourseTypes] = useState([]);\n\n  // Load course types for display\n  useEffect(() => {\n    const loadCourseTypes = async () => {\n      if (!token) return;\n      try {\n        const data = await getCourseTypesCached(token);\n        console.log('Raw courseTypes API response (ChapterList):', data);\n        console.log('CourseTypes data type:', typeof data);\n        console.log('CourseTypes is array:', Array.isArray(data));\n        \n        // Handle different response formats\n        let courseTypesArray = [];\n        if (Array.isArray(data)) {\n          courseTypesArray = data;\n        } else if (data && Array.isArray(data.content)) {\n          // Handle paginated response\n          courseTypesArray = data.content;\n        } else if (data && Array.isArray(data.data)) {\n          // Handle wrapped response\n          courseTypesArray = data.data;\n        } else if (data && data.courseTypes && Array.isArray(data.courseTypes)) {\n          // Handle nested response\n          courseTypesArray = data.courseTypes;\n        } else {\n          console.warn('Unexpected courseTypes data format (ChapterList):', data);\n          courseTypesArray = [];\n        }\n        \n        console.log('Processed courseTypes array (ChapterList):', courseTypesArray);\n        setCourseTypes(courseTypesArray);\n      } catch (error) {\n        console.error('Error loading course types:', error);\n      }\n    };\n    loadCourseTypes();\n  }, [token]);\n\n  // Helper function to get course type name\n  const getCourseTypeNameForChapter = (chapter) => {\n    return chapter.courseTypeName || \n           chapter.course?.courseTypeName || \n           getCourseTypeName(chapter.course?.courseType?.id || \n                           chapter.courseType?.id || \n                           chapter.courseTypeId);\n  };\n\n  // Helper function to get course name\n  const getCourseNameForChapter = (chapter) => {\n    return chapter.courseName || \n           getCourseName(chapter.course?.id || chapter.courseId);\n  };\n\n  // Group chapters by course type for better organization\n  const groupChaptersByType = () => {\n    const grouped = {};\n    chapters.forEach(chapter => {\n      const courseTypeName = getCourseTypeNameForChapter(chapter);\n      if (!grouped[courseTypeName]) {\n        grouped[courseTypeName] = [];\n      }\n      grouped[courseTypeName].push(chapter);\n    });\n    return grouped;\n  };\n\n  const groupedChapters = groupChaptersByType();\n  const courseTypeNames = Object.keys(groupedChapters).sort();\n\n  if (loading) {\n    return (\n      <div className=\"loading-container\">\n        <div className=\"loading-spinner\"></div>\n        <p>Loading chapters...</p>\n      </div>\n    );\n  }\n\n  if (!chapters || chapters.length === 0) {\n    return (\n      <div className=\"empty-state\">\n        <div className=\"empty-icon\">No Chapters</div>\n        <h4>No chapters found</h4>\n        <p>\n          {Object.keys(filters).some(key => filters[key] && filters[key] !== '') \n            ? 'No chapters match your current filters. Try adjusting your search criteria.'\n            : 'Start by creating your first chapter using the form above.'\n          }\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"data-section\">\n      <div className=\"data-header\">\n        <h4>Chapters ({chapters.length})</h4>\n        <div className=\"data-header-actions\">\n          <span className=\"data-count\">\n            Showing {chapters.length} chapter{chapters.length !== 1 ? 's' : ''}\n          </span>\n        </div>\n      </div>\n\n      {/* Grouped chapters by course type */}\n      <div className=\"chapters-by-type\">\n        {courseTypeNames.map((courseTypeName) => (\n          <div key={courseTypeName} className=\"chapter-type-section\">\n            <div className=\"section-header\">\n              <h4>{courseTypeName} ({groupedChapters[courseTypeName].length})</h4>\n            </div>\n            <div className=\"data-grid\">\n              {groupedChapters[courseTypeName].map((chapter) => (\n                <ChapterListCard\n                  key={chapter.id}\n                  chapter={chapter}\n                  onEdit={() => onEdit(chapter)}\n                  onDelete={() => onDelete(chapter)}\n                  onPreviewVideo={onPreviewVideo}\n                  onPreviewDocument={onPreviewDocument}\n                  getCourseTypeName={getCourseTypeNameForChapter}\n                  getCourseName={getCourseNameForChapter}\n                />\n              ))}\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {/* Alternative: Simple list view (uncomment if needed) */}\n      {/*\n      <div className=\"data-grid\">\n        {chapters.map((chapter) => (\n          <ChapterListCard\n            key={chapter.id}\n            chapter={chapter}\n            onEdit={() => onEdit(chapter)}\n            onDelete={() => onDelete(chapter)}\n            getCourseTypeName={getCourseTypeNameForChapter}\n            getCourseName={getCourseNameForChapter}\n          />\n        ))}\n      </div>\n      */}\n    </div>\n  );\n};\n\nexport default ChapterList;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { useApp } from '../../../context/AppContext';\nimport { useApiCall } from '../../../hooks/useApiCall';\nimport { useMasterData } from '../../../hooks/useMasterData';\nimport {\n    createChapter,\n    deleteChapter,\n    getChaptersByModule,\n    updateChapter\n} from '../../../services/masterDataService';\nimport DocumentPreviewModal from '../DocumentPreviewModal';\nimport '../MasterDataComponent.css';\nimport VideoPreviewModal from '../VideoPreviewModal';\nimport ChapterFilters from './ChapterFilters';\nimport ChapterForm from './ChapterForm';\nimport ChapterList from './ChapterList';\n\n/**\n * New Chapter Management Component\n * Refactored version using modular components and reusable hooks\n * Prevents API loops and provides better performance\n */\nconst ChapterManagementNew = () => {\n  const { token, addNotification } = useApp();\n  const { getCourseTypeName } = useMasterData();\n  const { executeApiCall } = useApiCall();\n\n  // Component state\n  const [loading, setLoading] = useState(false);\n  const [showForm, setShowForm] = useState(false);\n  const [editingChapter, setEditingChapter] = useState(null);\n  const [chapters, setChapters] = useState([]);\n  const [filters, setFilters] = useState({});\n  \n  // Preview modals\n  const [videoPreviewModal, setVideoPreviewModal] = useState(false);\n  const [selectedVideoData, setSelectedVideoData] = useState(null);\n  const [documentPreviewModal, setDocumentPreviewModal] = useState(false);\n  const [selectedDocumentData, setSelectedDocumentData] = useState(null);\n\n  // Load chapters based on current filters\n  const loadChapters = useCallback(async (currentFilters = {}) => {\n    if (!token) return;\n\n    try {\n      setLoading(true);\n      console.log('=== LOADING CHAPTERS ===');\n      console.log('Filters:', currentFilters);\n      \n      let data;\n      \n      // If module is selected, load chapters for that module\n      if (currentFilters.module) {\n        console.log('Loading chapters for module:', currentFilters.module);\n        data = await executeApiCall(\n          getChaptersByModule,\n          { \n            moduleId: currentFilters.module,\n            showActiveOnly: currentFilters.showActiveOnly !== false\n          },\n          { \n            useCache: true, \n            cacheTTL: 30000,\n            errorMessage: 'Failed to load chapters'\n          }\n        );\n      } else {\n        // No module selected - load all chapters using combined filter\n        console.log('Loading all chapters (no module filter)');\n        const { getChaptersCombinedFilter } = await import('../../../services/masterDataService');\n        data = await executeApiCall(\n          getChaptersCombinedFilter,\n          { \n            active: currentFilters.showActiveOnly !== false,\n            page: 0,\n            size: 100,\n            sortBy: 'createdAt',\n            sortDir: 'desc'\n          },\n          { \n            useCache: true, \n            cacheTTL: 30000,\n            errorMessage: 'Failed to load chapters'\n          }\n        );\n      }\n\n      if (data) {\n        const list = Array.isArray(data) ? data : (data?.content || data?.data || []);\n        console.log('Chapters loaded:', list.length, 'items');\n        setChapters(list || []);\n      }\n    } catch (error) {\n      console.error('Error loading chapters:', error);\n      setChapters([]);\n    } finally {\n      setLoading(false);\n    }\n  }, [token, executeApiCall]);\n\n  // Initial load - load all chapters when component mounts\n  useEffect(() => {\n    console.log('ChapterManagementNew mounted - loading all chapters');\n    loadChapters({ showActiveOnly: true });\n  }, [loadChapters]);\n\n  // Handle filter changes\n  const handleFiltersChange = useCallback((newFilters) => {\n    setFilters(newFilters);\n    loadChapters(newFilters);\n  }, [loadChapters]);\n\n  // Handle form submission\n  const handleFormSubmit = useCallback(async (formData) => {\n    if (!token) return;\n\n    try {\n      setLoading(true);\n\n      const submitData = {\n        name: formData.name.trim(),\n        description: formData.description.trim(),\n        moduleId: parseInt(formData.moduleId),\n        displayOrder: formData.displayOrder ? parseInt(formData.displayOrder) : null,\n        isActive: formData.isActive !== false,\n        youtubeLinks: formData.youtubeLinks || [],\n        youtubeTitles: formData.youtubeTitles || [],\n        uploadedFiles: formData.uploadedFiles || [],\n        uploadedFileTitles: formData.uploadedFileTitles || []\n      };\n\n      // Add file objects for multipart upload if they exist\n      if (formData.uploadedFileObjects && Object.keys(formData.uploadedFileObjects).length > 0) {\n        submitData.uploadedFileObjects = formData.uploadedFileObjects;\n      }\n\n      console.log('Submit data for update:', submitData);\n      console.log('Editing chapter:', editingChapter);\n\n      let response;\n      if (editingChapter) {\n        // Create a wrapper function that matches useApiCall's expected signature\n        const updateChapterWrapper = async (token, params) => {\n          return await updateChapter(token, params.id, params.chapterData);\n        };\n        \n        response = await executeApiCall(\n          updateChapterWrapper,\n          { id: editingChapter.id, chapterData: submitData },\n          { errorMessage: 'Failed to update chapter' }\n        );\n        addNotification({\n          type: 'success',\n          message: 'Chapter updated successfully',\n          duration: 3000\n        });\n      } else {\n        response = await executeApiCall(\n          createChapter,\n          submitData,\n          { errorMessage: 'Failed to create chapter' }\n        );\n        addNotification({\n          type: 'success',\n          message: 'Chapter created successfully',\n          duration: 3000\n        });\n      }\n\n      if (response) {\n        setShowForm(false);\n        setEditingChapter(null);\n        // Reload chapters with current filters\n        loadChapters(filters);\n      }\n    } catch (error) {\n      console.error('Error submitting chapter:', error);\n      // Error notification is handled by executeApiCall\n    } finally {\n      setLoading(false);\n    }\n  }, [token, editingChapter, executeApiCall, addNotification, loadChapters, filters]);\n\n  // Handle edit\n  const handleEdit = useCallback((chapter) => {\n    setEditingChapter(chapter);\n    setShowForm(true);\n  }, []);\n\n  // Handle delete\n  const handleDelete = useCallback(async (chapter) => {\n    if (!token) return;\n    \n    if (!window.confirm(`Are you sure you want to delete the chapter \"${chapter.name}\"?`)) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      \n      await executeApiCall(\n        deleteChapter,\n        { id: chapter.id },\n        { errorMessage: 'Failed to delete chapter' }\n      );\n\n      addNotification({\n        type: 'success',\n        message: 'Chapter deleted successfully',\n        duration: 3000\n      });\n\n      // Reload chapters with current filters\n      loadChapters(filters);\n    } catch (error) {\n      console.error('Error deleting chapter:', error);\n      // Error notification is handled by executeApiCall\n    } finally {\n      setLoading(false);\n    }\n  }, [token, executeApiCall, addNotification, loadChapters, filters]);\n\n  // Handle form cancel\n  const handleFormCancel = useCallback(() => {\n    setShowForm(false);\n    setEditingChapter(null);\n  }, []);\n\n  // Handle create new\n  const handleCreateNew = useCallback(() => {\n    setEditingChapter(null);\n    setShowForm(true);\n  }, []);\n\n  // Handle video preview\n  const handlePreviewVideo = useCallback((videoData) => {\n    console.log('Preview video:', videoData);\n    setSelectedVideoData(videoData);\n    setVideoPreviewModal(true);\n  }, []);\n\n  // Handle document preview\n  const handlePreviewDocument = useCallback((documentData) => {\n    console.log('ChapterManagementNew - Preview document called with:', documentData);\n    console.log('Document preview data details:', {\n      fileName: documentData?.fileName,\n      filePath: documentData?.filePath,\n      fileObject: documentData?.fileObject,\n      title: documentData?.title,\n      hasFilePath: !!documentData?.filePath,\n      filePathType: typeof documentData?.filePath\n    });\n    setSelectedDocumentData(documentData);\n    setDocumentPreviewModal(true);\n  }, []);\n\n  // Close video preview\n  const closeVideoPreview = useCallback(() => {\n    setVideoPreviewModal(false);\n    setSelectedVideoData(null);\n  }, []);\n\n  // Close document preview\n  const closeDocumentPreview = useCallback(() => {\n    setDocumentPreviewModal(false);\n    setSelectedDocumentData(null);\n  }, []);\n\n  return (\n    <div className=\"chapter-management\">\n      <div className=\"component-header\">\n        <div className=\"header-content\">\n          <h2>Chapter Management</h2>\n          <p>Manage chapters for your courses, organized by modules</p>\n        </div>\n        <div className=\"header-actions\">\n          <button \n            className=\"btn btn-primary\"\n            onClick={handleCreateNew}\n            disabled={loading}\n          >\n            Create Chapter\n          </button>\n        </div>\n      </div>\n\n      {/* Filters Section */}\n      <ChapterFilters \n        onFiltersChange={handleFiltersChange}\n        loading={loading}\n      />\n\n      {/* Form Section */}\n      {showForm && (\n        <ChapterForm\n          onSubmit={handleFormSubmit}\n          onCancel={handleFormCancel}\n          editingChapter={editingChapter}\n          loading={loading}\n        />\n      )}\n\n      {/* List Section */}\n      <ChapterList\n        filters={filters}\n        chapters={chapters}\n        onEdit={handleEdit}\n        onDelete={handleDelete}\n        onPreviewVideo={handlePreviewVideo}\n        onPreviewDocument={handlePreviewDocument}\n        loading={loading}\n      />\n\n      {/* Video Preview Modal */}\n      <VideoPreviewModal\n        isOpen={videoPreviewModal}\n        onClose={closeVideoPreview}\n        embedUrl={selectedVideoData?.embedUrl}\n        watchUrl={selectedVideoData?.watchUrl}\n        videoTitle={selectedVideoData?.title}\n      />\n\n      {/* Document Preview Modal */}\n      <DocumentPreviewModal\n        isOpen={documentPreviewModal}\n        onClose={closeDocumentPreview}\n        fileName={selectedDocumentData?.fileName}\n        filePath={selectedDocumentData?.filePath}\n        fileObject={selectedDocumentData?.fileObject}\n        fileType=\"Document Preview\"\n      />\n\n    </div>\n  );\n};\n\nexport default ChapterManagementNew;\n","import { useCallback, useRef } from 'react';\nimport { useApp } from '../context/AppContext';\n\n/**\n * Custom hook for managing API calls with deduplication, caching, and abort control\n * Prevents duplicate API calls and provides consistent error handling\n */\nexport const useApiCall = () => {\n  const { token, addNotification } = useApp();\n  \n  // Cache for storing API responses\n  const cacheRef = useRef(new Map());\n  \n  // Abort controllers for canceling requests\n  const abortControllersRef = useRef(new Map());\n  \n  // Request deduplication tracking\n  const pendingRequestsRef = useRef(new Map());\n\n  /**\n   * Create a cache key from parameters\n   */\n  const createCacheKey = useCallback((url, params = {}) => {\n    const sortedParams = Object.keys(params)\n      .sort()\n      .map(key => `${key}=${params[key]}`)\n      .join('&');\n    return `${url}?${sortedParams}`;\n  }, []);\n\n  /**\n   * Check if a request should be skipped due to deduplication\n   */\n  const shouldSkipRequest = useCallback((cacheKey) => {\n    const now = Date.now();\n    const pendingRequest = pendingRequestsRef.current.get(cacheKey);\n    \n    if (pendingRequest && (now - pendingRequest.timestamp) < 1000) {\n      return true; // Skip if same request was made within 1 second\n    }\n    \n    return false;\n  }, []);\n\n  /**\n   * Get cached response if available and not expired\n   */\n  const getCachedResponse = useCallback((cacheKey, ttl = 30000) => {\n    const cached = cacheRef.current.get(cacheKey);\n    if (cached && (Date.now() - cached.timestamp) < ttl) {\n      return cached.data;\n    }\n    return null;\n  }, []);\n\n  /**\n   * Set response in cache\n   */\n  const setCachedResponse = useCallback((cacheKey, data) => {\n    cacheRef.current.set(cacheKey, {\n      data,\n      timestamp: Date.now()\n    });\n  }, []);\n\n  /**\n   * Abort previous request with same cache key\n   */\n  const abortPreviousRequest = useCallback((cacheKey) => {\n    const controller = abortControllersRef.current.get(cacheKey);\n    if (controller) {\n      controller.abort();\n      abortControllersRef.current.delete(cacheKey);\n    }\n  }, []);\n\n  /**\n   * Execute API call with deduplication and caching\n   */\n  const executeApiCall = useCallback(async (\n    apiFunction,\n    params = {},\n    options = {}\n  ) => {\n    const {\n      useCache = true,\n      cacheTTL = 30000,\n      showError = true,\n      errorMessage = 'API call failed'\n    } = options;\n\n    // Create cache key\n    const cacheKey = createCacheKey(apiFunction.name || 'api', params);\n\n    // Check cache first\n    if (useCache) {\n      const cachedResponse = getCachedResponse(cacheKey, cacheTTL);\n      if (cachedResponse) {\n        return cachedResponse;\n      }\n    }\n\n    // Check for duplicate requests\n    if (shouldSkipRequest(cacheKey)) {\n      console.log(`Skipping duplicate API call: ${cacheKey}`);\n      return null;\n    }\n\n    // Mark request as pending\n    pendingRequestsRef.current.set(cacheKey, {\n      timestamp: Date.now()\n    });\n\n    // Abort previous request\n    abortPreviousRequest(cacheKey);\n\n    // Create new abort controller\n    const controller = new AbortController();\n    abortControllersRef.current.set(cacheKey, controller);\n\n    try {\n      // Execute API call\n      const response = await apiFunction(token, { ...params, signal: controller.signal });\n      \n      // Cache successful response\n      if (useCache) {\n        setCachedResponse(cacheKey, response);\n      }\n\n      // Remove from pending requests\n      pendingRequestsRef.current.delete(cacheKey);\n      \n      // Remove abort controller\n      abortControllersRef.current.delete(cacheKey);\n\n      return response;\n    } catch (error) {\n      // Remove from pending requests\n      pendingRequestsRef.current.delete(cacheKey);\n      \n      // Remove abort controller\n      abortControllersRef.current.delete(cacheKey);\n\n      // Handle abort error silently\n      if (error.name === 'AbortError') {\n        console.log(`API call aborted: ${cacheKey}`);\n        return null;\n      }\n\n      // Handle other errors\n      console.error(`API call failed: ${cacheKey}`, error);\n      \n      if (showError) {\n        addNotification({\n          type: 'error',\n          message: `${errorMessage}: ${error.message || 'Unknown error'}`,\n          duration: 5000\n        });\n      }\n\n      throw error;\n    }\n  }, [\n    token,\n    createCacheKey,\n    getCachedResponse,\n    setCachedResponse,\n    shouldSkipRequest,\n    abortPreviousRequest,\n    addNotification\n  ]);\n\n  /**\n   * Execute multiple API calls in parallel with individual error handling\n   */\n  const executeParallelApiCalls = useCallback(async (apiCalls) => {\n    const promises = apiCalls.map(({ apiFunction, params = {}, options = {} }) =>\n      executeApiCall(apiFunction, params, { ...options, showError: false })\n        .catch(error => {\n          console.error(`Parallel API call failed: ${apiFunction.name}`, error);\n          return { error: error.message };\n        })\n    );\n\n    try {\n      const results = await Promise.all(promises);\n      return results;\n    } catch (error) {\n      console.error('Parallel API calls failed:', error);\n      addNotification({\n        type: 'error',\n        message: 'Some API calls failed',\n        duration: 5000\n      });\n      return [];\n    }\n  }, [executeApiCall, addNotification]);\n\n  /**\n   * Clear cache for specific pattern or all cache\n   */\n  const clearCache = useCallback((pattern = null) => {\n    if (pattern) {\n      // Clear cache entries matching pattern\n      for (const [key] of cacheRef.current) {\n        if (key.includes(pattern)) {\n          cacheRef.current.delete(key);\n        }\n      }\n    } else {\n      // Clear all cache\n      cacheRef.current.clear();\n    }\n  }, []);\n\n  /**\n   * Abort all pending requests\n   */\n  const abortAllRequests = useCallback(() => {\n    for (const [key, controller] of abortControllersRef.current) {\n      controller.abort();\n      abortControllersRef.current.delete(key);\n    }\n    pendingRequestsRef.current.clear();\n  }, []);\n\n  /**\n   * Get cache statistics\n   */\n  const getCacheStats = useCallback(() => {\n    return {\n      cacheSize: cacheRef.current.size,\n      pendingRequests: pendingRequestsRef.current.size,\n      activeAbortControllers: abortControllersRef.current.size\n    };\n  }, []);\n\n  return {\n    executeApiCall,\n    executeParallelApiCalls,\n    clearCache,\n    abortAllRequests,\n    getCacheStats,\n    createCacheKey,\n    getCachedResponse,\n    shouldSkipRequest\n  };\n};\n"],"names":["_ref","isOpen","onClose","fileName","filePath","fileObject","fileType","modalRef","useRef","serverBlobUrlRef","isFullscreen","setIsFullscreen","React","serverBlobUrl","setServerBlobUrl","useState","loading","setLoading","error","setError","useEffect","handleEscape","e","key","handleFullscreenToggle","ctrlKey","preventDefault","toggleFullscreen","handleClickOutside","current","contains","target","document","addEventListener","body","style","overflow","createElement","id","textContent","head","appendChild","removeEventListener","existingStyle","getElementById","remove","async","serverUrl","startsWith","concat","console","log","response","fetch","ok","Error","status","statusText","blob","size","blobUrl","URL","createObjectURL","revokeObjectURL","err","message","fetchServerFile","pdfUrl","useMemo","_fileName$split$pop","extension","split","pop","toLowerCase","_jsx","className","children","_jsxs","ref","onClick","title","renderPreview","_fileName$split$pop2","testUrl","encodeURIComponent","window","open","location","href","enhancedPdfUrl","src","width","height","border","backgroundColor","position","top","left","onLoad","onError","downloadUrl","embedUrl","watchUrl","videoTitle","iframeRef","right","bottom","display","alignItems","justifyContent","zIndex","padding","boxSizing","background","borderRadius","maxWidth","maxHeight","flexDirection","boxShadow","borderBottom","margin","fontSize","fontWeight","color","cursor","lineHeight","type","flex","paddingBottom","flexShrink","frameBorder","allow","allowFullScreen","gap","borderTop","rel","textDecoration","sharedFilterState","cache","courses","Map","classes","exams","subjects","topics","modules","chapters","lastFetch","abortControllers","_filteredCourses$find","_filteredClasses$find","_filteredExams$find","_filteredSubjects$fin","_filteredSubjects$fin2","_filteredTopics$find","_filteredModules$find","onFiltersChange","token","useApp","getCourseTypeName","useMasterData","courseTypes","setCourseTypes","selectedCourseType","setSelectedCourseType","selectedCourse","setSelectedCourse","selectedClass","setSelectedClass","selectedExam","setSelectedExam","selectedSubject","setSelectedSubject","selectedTopic","setSelectedTopic","selectedModule","setSelectedModule","showActiveOnly","setShowActiveOnly","filteredCourses","filteredClasses","filteredExams","filteredSubjects","filteredTopics","filteredModules","loadingStates","resetFilters","isAcademicCourseType","isCompetitiveCourseType","useSharedMasterDataFilters","addNotification","fetchCourses","fetchClasses","fetchExams","fetchSubjects","fetchTopicsByLinkage","fetchModulesByTopic","fetchChaptersByModule","isProfessionalCourseType","setFilteredCourses","setFilteredClasses","setFilteredExams","setFilteredSubjects","setFilteredTopics","setFilteredModules","filteredChapters","setFilteredChapters","debounceRef","createCacheKey","useCallback","_len","arguments","length","args","Array","_key","filter","Boolean","join","shouldSkipRequest","get","now","Date","getCachedData","setCachedData","data","set","abortPreviousRequest","controller","abort","AbortController","fetchCoursesShared","courseTypeId","cached","result","name","fetchClassesShared","courseId","fetchExamsShared","fetchSubjectsShared","classId","examId","fetchTopicsShared","subjectId","parseInt","isArray","content","fetchModulesShared","topicId","fetchChaptersShared","moduleId","clearTimeout","setTimeout","courseType","course","class","exam","subject","topic","module","getCourseTypesCached","courseTypesArray","warn","loadCourseTypes","handleFilterChange","filterType","value","checked","onChange","clearAllFilters","disabled","htmlFor","map","classItem","subjectName","linkageId","find","c","s","t","m","getFileIcon","getFileTypeDisplay","toUpperCase","validateFileType","_fileName$split$pop3","allowedTypes","undefined","isValid","includes","getYouTubeVideoId","url","trim","replace","patterns","pattern","match","isValidYouTubeUrl","getYouTubeThumbnail","videoId","qualityKey","default","medium","high","maxres","getYouTubeEmbedUrl","options","defaultOptions","_objectSpread","autoplay","controls","showinfo","modestbranding","params","URLSearchParams","toString","normalizeYouTubeUrl","getYouTubeWatchUrl","onSubmit","onCancel","editingChapter","youtubeLinkInput","setYoutubeLinkInput","youtubeLinkError","setYoutubeLinkError","draggedIndex","setDraggedIndex","fileInputs","setFileInputs","fileInputError","setFileInputError","uploadedFileObjects","setUploadedFileObjects","videoPreviewModal","setVideoPreviewModal","selectedVideoData","setSelectedVideoData","documentPreviewModal","setDocumentPreviewModal","selectedDocumentData","setSelectedDocumentData","formData","errors","touched","handleInputChange","handleBlur","handleSubmit","formFilteredCourses","formFilteredClasses","formFilteredExams","formFilteredSubjects","formFilteredTopics","formFilteredModules","formLoadingStates","setFormData","resetForm","useMasterDataForm","initialFormData","validationRules","validateForm","useFormManager","setFormFilteredCourses","setFormFilteredClasses","setFormFilteredExams","setFormFilteredSubjects","setFormFilteredTopics","setFormFilteredModules","formFilteredChapters","setFormFilteredChapters","setFormLoadingStates","formLastFetchRef","timestamp","formAbortControllersRef","updateFormLoadingState","isLoading","prev","abortFormPreviousRequest","fetchFormCourses","duration","fetchFormClassesAndExams","promises","classKey","push","then","catch","examKey","Promise","all","fetchFormSubjects","fetchFormTopics","list","fetchFormModules","fetchFormChapters","handleFormSubmit","resetFormWithData","Object","values","forEach","description","displayOrder","isActive","youtubeLinks","youtubeTitles","uploadedFiles","uploadedFileTitles","uploadedFilePaths","_editingChapter$topic","_editingChapter$topic2","_editingChapter$modul","_editingChapter$modul2","_editingChapter$modul3","_editingChapter$topic3","_editingChapter$topic4","_editingChapter$modul4","_editingChapter$modul5","_editingChapter$modul6","_editingChapter$topic5","_editingChapter$topic6","_editingChapter$modul7","_editingChapter$modul8","_editingChapter$modul9","_editingChapter$topic7","_editingChapter$topic8","_editingChapter$modul0","_editingChapter$modul1","_editingChapter$modul10","_editingChapter$topic9","_editingChapter$topic0","_editingChapter$modul11","_editingChapter$modul12","_editingChapter$modul13","_editingChapter$topic1","_editingChapter$modul14","_editingChapter$modul15","videos","video","index","youtubeLink","link","_editingChapter$youtu","documents","doc","documentTitle","addYoutubeLink","normalizedUrl","currentLinks","currentTitles","some","defaultTitle","openVideoPreview","originalUrl","videoUrl","formDataWithFiles","onBlur","required","placeholder","rows","onKeyPress","alt","editYoutubeTitle","currentTitle","newTitle","prompt","newTitles","editYoutubeLink","currentUrl","newUrl","_","i","newLinks","removeYoutubeLink","accept","file","files","validation","currentFiles","currentPaths","newFiles","newPaths","click","openDocumentPreview","editUploadedFileTitle","fileNameToRemove","newObjects","removeUploadedFile","VideoPreviewModal","closeVideoPreview","DocumentPreviewModal","closeDocumentPreview","chapter","onEdit","onDelete","onPreviewVideo","onPreviewDocument","showDetails","setShowDetails","createdAt","updatedAt","createdByName","updatedByName","moduleName","toggleDetails","_videoUrl2","cleanUrl","thumbnailUrl","handleVideoPreview","_videoUrl","chapterId","chapterName","videoObject","_document$filePath2","fileIcon","handleDocumentPreview","_document$filePath","documentObject","hasFilePath","filePathType","toLocaleDateString","filters","getCourseName","getCourseTypeNameForChapter","_chapter$course","_chapter$course2","_chapter$course2$cour","_chapter$courseType","courseTypeName","getCourseNameForChapter","_chapter$course3","courseName","groupedChapters","groupChaptersByType","grouped","courseTypeNames","keys","sort","ChapterListCard","ChapterManagementNew","executeApiCall","useApiCall","cacheRef","abortControllersRef","pendingRequestsRef","sortedParams","cacheKey","pendingRequest","getCachedResponse","ttl","setCachedResponse","delete","apiFunction","useCache","cacheTTL","showError","errorMessage","cachedResponse","signal","executeParallelApiCalls","apiCalls","clearCache","clear","abortAllRequests","getCacheStats","cacheSize","pendingRequests","activeAbortControllers","showForm","setShowForm","setEditingChapter","setChapters","setFilters","loadChapters","currentFilters","getChaptersByModule","getChaptersCombinedFilter","active","page","sortBy","sortDir","_data","_data2","handleFiltersChange","newFilters","submitData","updateChapterWrapper","updateChapter","chapterData","createChapter","handleEdit","handleDelete","confirm","deleteChapter","handleFormCancel","handleCreateNew","handlePreviewVideo","videoData","handlePreviewDocument","documentData","ChapterFilters","ChapterForm","ChapterList"],"sourceRoot":""}