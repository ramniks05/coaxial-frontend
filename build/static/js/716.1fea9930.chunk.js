"use strict";(self.webpackChunklearning_management_system=self.webpackChunklearning_management_system||[]).push([[716],{716:(e,s,r)=>{r.r(s),r.d(s,{default:()=>d});var a=r(555),t=r(43),o=r(580),c=r(872),n=r(712),l=(r(595),r(579));const i=e=>{let{item:s,itemType:r="item",onEdit:a,onDelete:t,fields:o=[],badges:c=[]}=e;const n=()=>s.description,i=()=>s.createdByName;return(0,l.jsxs)("div",{className:"data-card",children:[(0,l.jsxs)("div",{className:"card-header",children:[(0,l.jsxs)("div",{className:"card-title",children:[(0,l.jsx)("h4",{children:(()=>{switch(r){case"subject":return s.subjectName||s.name;case"topic":return s.topicName||s.name;default:return s.name}})()}),(0,l.jsxs)("div",{className:"card-badges",children:[(0,l.jsx)("span",{className:"status-badge ".concat(s.isActive?"active":"inactive"),children:s.isActive?"Active":"Inactive"}),c.map(e=>{const{key:r,label:a,value:t,condition:o,style:c,icon:n}=e;if(o&&!o(s))return null;const i=t||s[r];return i?(0,l.jsxs)("span",{className:"structure-badge",style:c,children:[n," ",i]},r):null})]})]}),(0,l.jsxs)("div",{className:"card-actions",children:[(0,l.jsx)("button",{className:"btn btn-outline btn-xs",onClick:()=>{a&&a(s)},children:"Edit"}),(0,l.jsx)("button",{className:"btn btn-danger btn-xs",onClick:()=>{t&&t(s.id)},children:"Delete"})]})]}),(0,l.jsxs)("div",{className:"card-content",children:[n()&&(0,l.jsx)("p",{className:"description",children:n()}),o.map(e=>{const{key:r,label:a,value:t,condition:o}=e;if(o&&!o(s))return null;const c="function"===typeof t?t(s):t||s[r];return c?(0,l.jsxs)("p",{children:[(0,l.jsxs)("strong",{children:[a,":"]})," ",c]},r):null})]}),(0,l.jsx)("div",{className:"card-footer",children:(0,l.jsxs)("small",{className:"text-muted",children:["Created: ",new Date(s.createdAt).toLocaleDateString(),i()&&(0,l.jsxs)("span",{children:[" by ",i()]})]})})]})},d=()=>{const{token:e,addNotification:s}=(0,o.nm)(),[r,d]=(0,t.useState)([]),[u,m]=(0,t.useState)([]),[h,y]=(0,t.useState)(!1),[p,g]=(0,t.useState)(!1),[f,v]=(0,t.useState)(null),[x,N]=(0,t.useState)(""),[j,A]=(0,t.useState)(""),[C,b]=(0,t.useState)({name:"",description:"",course:{id:""},isActive:!0}),T=(0,t.useRef)(null),w=(0,t.useRef)(null),k=(0,t.useRef)(!0),I=(0,t.useRef)(!1),E=(0,t.useRef)(""),F=(0,t.useRef)(0),S=(0,t.useRef)({data:null,ts:0}),P=(0,t.useRef)(""),R=(0,t.useRef)(0),D=(0,t.useRef)({data:null,ts:0});(0,t.useEffect)(()=>{console.log("Initial useEffect triggered with token:",!!e),e?(console.log("Calling fetchData..."),U()):(console.warn("No token available, skipping data fetch"),s({type:"warning",message:"Please log in to access class management features",duration:5e3}))},[e]),(0,t.useEffect)(()=>{e&&(!k.current&&I.current?j?(console.log("Course changed to:",j),S.current={data:null,ts:0},q(null,j)):(console.log("Fetching all Academic classes for course type:",x),S.current={data:null,ts:0},q(x)):k.current=!1)},[j,x,e]),(0,t.useEffect)(()=>()=>{if(T.current)try{T.current.abort()}catch(e){}if(w.current)try{w.current.abort()}catch(e){}},[]);const U=async()=>{console.log("fetchData called");try{if(y(!0),console.log("Token status:",{hasToken:!!e,tokenLength:e?e.length:0,tokenPreview:e?e.substring(0,20)+"...":"No token"}),!e)throw new Error("No authentication token available. Please log in again.");console.log("Fetching course types...");const s=await(0,c.RG)(e);console.log("Raw courseTypes API response (ClassManagement):",s),console.log("CourseTypes data type:",typeof s),console.log("CourseTypes is array:",Array.isArray(s));let r=[];Array.isArray(s)?r=s:s&&Array.isArray(s.content)?r=s.content:s&&Array.isArray(s.data)?r=s.data:s&&s.courseTypes&&Array.isArray(s.courseTypes)?r=s.courseTypes:(console.warn("Unexpected courseTypes data format (ClassManagement):",s),r=[]),console.log("Processed courseTypes array (ClassManagement):",r),m(r);const a=r.find(e=>e.name.toLowerCase().includes("academic"));console.log("Academic course type found:",a),a&&(console.log("Auto-setting Academic course type:",a),N(a.id),console.log("Fetching courses for academic course type..."),await O(a.id));const t=a?a.id:null;console.log("Initial fetchClasses call with courseTypeId:",t),await q(t),I.current=!0}catch(r){console.error("Error fetching data:",r);let e="Failed to fetch data";r.message.includes("Unauthorized")?e="Authentication failed. Please log in again.":r.message.includes("No authentication token")?e="Please log in to access this feature.":r.message.includes("Failed to fetch")&&(e="Unable to connect to server. Please check your connection."),s({type:"error",message:e,duration:7e3})}finally{y(!1)}},q=async function(){let r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;console.log("fetchClasses called with:",{courseTypeId:r,courseId:a});try{if(y(!0),!e)throw new Error("No authentication token available");const s="classes_".concat(r||"all","_").concat(a||"all"),o=Date.now();if(S.current.data&&S.current.queryKey===s&&o-S.current.ts<5e3)return console.log("Using cached classes data for:",s),d(S.current.data),void y(!1);if(E.current===s&&o-F.current<1500)return console.log("Skipping duplicate classes request:",s),void y(!1);if(T.current)try{T.current.abort()}catch(t){}T.current=new AbortController,console.log("fetchClasses called with:",{courseTypeId:r,courseId:a,hasToken:!!e,queryKey:s,selectedCourseType:x,selectedCourse:j}),E.current=s,F.current=o;const c=await(0,n.lw)(e,r||null,a||null,T.current.signal);console.log("API response for classes:",c);const l=c.content||c;let i=Array.isArray(l)?l:[];if(console.log("Classes array before filtering:",i),console.log("Filtering by courseTypeId:",r),r&&!a){const e=i.length;console.log("Starting frontend filtering with courseTypeId:",r),console.log("Original data length:",e),i=i.filter(e=>{var s,a,t,o;const c=(null===(s=e.course)||void 0===s||null===(a=s.courseType)||void 0===a?void 0:a.id)||(null===(t=e.courseType)||void 0===t?void 0:t.id)||e.courseTypeId||(null===(o=e.course)||void 0===o?void 0:o.courseTypeId),n="ACADEMIC"===e.structureType||e.courseTypeName&&e.courseTypeName.toLowerCase().includes("academic");return console.log("Class filtering check:",{id:e.id,name:e.name,clsCourseTypeId:c,expectedCourseTypeId:parseInt(r),structureType:e.structureType,courseTypeName:e.courseTypeName,isAcademic:n,match:c===parseInt(r)||n,course:e.course,courseType:e.courseType}),c===parseInt(r)||n}),console.log("Filtered ".concat(e," classes to ").concat(i.length," classes for course type ").concat(r))}else console.log("No frontend filtering applied - showing all classes");S.current={data:i,queryKey:s,ts:o},console.log("Setting classes state with:",i),d(i)}catch(o){if("AbortError"===o.name)return void console.log("Classes request was aborted");console.error("Error fetching classes:",o),console.error("Error details:",{courseTypeId:r,courseId:a,errorMessage:o.message});let e="Failed to fetch classes";o.message.includes("Unauthorized")?e="Authentication failed. Please log in again.":o.message.includes("Failed to fetch")?e="Unable to connect to server. Please check your connection.":o.message.includes("No authentication token")&&(e="Please log in to access this feature."),s({type:"error",message:e,duration:7e3})}finally{y(!1)}},L=e=>{var s;b({name:e.name,description:e.description||"",course:{id:(null===(s=e.course)||void 0===s?void 0:s.id)||e.courseId||""},isActive:e.isActive}),v(e.id),g(!0)},_=async r=>{if(window.confirm("Are you sure you want to delete this class?"))try{y(!0),await(0,n._p)(e,r),s({type:"success",message:"Class deleted successfully",duration:3e3}),S.current={data:null,ts:0},await q(x,j)}catch(a){console.error("Error deleting class:",a),s({type:"error",message:"Failed to delete class",duration:5e3})}finally{y(!1)}},M=()=>{b({name:"",description:"",course:{id:""},isActive:!0}),v(null),g(!1)},B=e=>{if(!Array.isArray(u))return console.warn("courseTypes is not an array:",u),"Unknown";const s=u.find(s=>s.id===e);return s?s.name:"Unknown"},K=()=>{if(!Array.isArray(G))return console.warn("coursesByType is not an array:",G),[];console.log("All courses:",G);const e=G.filter(e=>{var s;if(e.courseTypeName&&e.courseTypeName.toLowerCase().includes("academic"))return console.log("Found academic course by courseTypeName:",e),!0;const r=(e=>{if(!Array.isArray(u))return console.warn("courseTypes is not an array:",u),!1;const s=u.find(s=>s.id===e),r=s&&s.name.toLowerCase().includes("academic");return console.log("isAcademicCourseType check:",{courseTypeId:e,courseType:s,isAcademic:r}),r})((null===(s=e.courseType)||void 0===s?void 0:s.id)||e.courseTypeId);return r&&console.log("Found academic course by courseType lookup:",e),r});return console.log("Academic courses found:",e),e},[G,z]=(0,t.useState)([]),O=async r=>{if(r&&e)try{const s="courses_".concat(r),t=Date.now();if(D.current.data&&D.current.queryKey===s&&t-D.current.ts<5e3)return console.log("Using cached courses data for:",s),void z(D.current.data);if(P.current===s&&t-R.current<1500)return void console.log("Skipping duplicate courses request:",s);if(w.current)try{w.current.abort()}catch(a){}w.current=new AbortController,console.log("Fetching courses for course type:",r),P.current=s,R.current=t;const o=await(0,n.NJ)(e,r,0,100),c=o.content||o,l=Array.isArray(c)?c:[];D.current={data:l,queryKey:s,ts:t},z(l),console.log("Courses fetched for course type:",l)}catch(t){if("AbortError"===t.name)return void console.log("Courses request was aborted");console.error("Error fetching courses by course type:",t),z([]),s({type:"error",message:"Failed to fetch courses for selected course type",duration:5e3})}else z([])};return(0,l.jsxs)("div",{className:"master-data-component",children:[(0,l.jsxs)("div",{className:"component-header",children:[(0,l.jsxs)("div",{className:"header-info",children:[(0,l.jsx)("h2",{children:"Class Management"}),(0,l.jsx)("p",{children:"Manage classes for Academic course types only (e.g., Grade 1, Grade 2, Class A, Class B)"})]}),(0,l.jsx)("button",{className:"btn btn-primary",onClick:()=>g(!0),children:"Add Class"})]}),(0,l.jsx)("div",{className:"filter-section",children:(0,l.jsxs)("div",{className:"filter-group",children:[(0,l.jsx)("label",{htmlFor:"course-filter",children:"Course:"}),(0,l.jsxs)("select",{id:"course-filter",value:j,onChange:e=>{const s=e.target.value;s!==j&&A(s)},className:"filter-select",children:[(0,l.jsx)("option",{value:"",children:"All Academic Courses"}),K().map(e=>(0,l.jsx)("option",{value:e.id,children:e.name},e.id))]})]})}),p&&(0,l.jsxs)("div",{className:"form-section",children:[(0,l.jsxs)("div",{className:"form-header",children:[(0,l.jsx)("h3",{children:f?"Edit Class":"Add New Class"}),(0,l.jsx)("button",{className:"btn btn-outline btn-sm",onClick:M,children:"Cancel"})]}),(0,l.jsxs)("form",{onSubmit:async r=>{r.preventDefault();try{y(!0);const r={name:C.name,description:C.description,courseId:parseInt(C.course.id),displayOrder:0,isActive:C.isActive};if(console.log("Submitting class data:",r),console.log("Token available:",!!e),console.log("Form data validation:",{courseId:C.course.id,courseIdType:typeof C.course.id,hasCourseId:!!C.course.id}),!C.course.id)throw new Error("Please select a course");f?(await(0,n.Ez)(e,f,r),s({type:"success",message:"Class updated successfully",duration:3e3})):(await(0,n.j6)(e,r),s({type:"success",message:"Class created successfully",duration:3e3})),g(!1),v(null),b({name:"",description:"",course:{id:""},isActive:!0}),S.current={data:null,ts:0},await q(x,j)}catch(a){console.error("Error saving class:",a),s({type:"error",message:"Failed to save class: ".concat(a.message),duration:5e3})}finally{y(!1)}},className:"master-data-form",children:[(0,l.jsxs)("div",{className:"form-row",children:[(0,l.jsxs)("div",{className:"form-group",children:[(0,l.jsx)("label",{htmlFor:"name",children:"Class Name *"}),(0,l.jsx)("input",{type:"text",id:"name",name:"name",value:C.name,onChange:e=>b((0,a.A)((0,a.A)({},C),{},{name:e.target.value})),className:"form-input",required:!0,placeholder:"e.g., Grade 1, Class A, Batch 2024"})]}),(0,l.jsxs)("div",{className:"form-group",children:[(0,l.jsx)("label",{htmlFor:"course",children:"Course *"}),(0,l.jsxs)("select",{id:"course",name:"course",value:C.course.id,onChange:e=>b((0,a.A)((0,a.A)({},C),{},{course:{id:e.target.value}})),className:"form-input",required:!0,children:[(0,l.jsx)("option",{value:"",children:"Select Course"}),0===K().length?(0,l.jsx)("option",{value:"",disabled:!0,children:"No Academic Courses Available - Create a course first"}):K().map(e=>{var s;return(0,l.jsxs)("option",{value:e.id,children:[e.name," (",e.courseTypeName||B((null===(s=e.courseType)||void 0===s?void 0:s.id)||e.courseTypeId),")"]},e.id)})]})]})]}),(0,l.jsx)("div",{className:"form-row",children:(0,l.jsxs)("div",{className:"form-group full-width",children:[(0,l.jsx)("label",{htmlFor:"description",children:"Description"}),(0,l.jsx)("textarea",{id:"description",name:"description",value:C.description,onChange:e=>b((0,a.A)((0,a.A)({},C),{},{description:e.target.value})),className:"form-input",placeholder:"Brief description of this class",rows:3})]})}),(0,l.jsx)("div",{className:"form-row",children:(0,l.jsxs)("div",{className:"form-group",children:[(0,l.jsx)("label",{htmlFor:"isActive",children:"Status"}),(0,l.jsxs)("select",{id:"isActive",name:"isActive",value:C.isActive,onChange:e=>b((0,a.A)((0,a.A)({},C),{},{isActive:"true"===e.target.value})),className:"form-input",children:[(0,l.jsx)("option",{value:!0,children:"Active"}),(0,l.jsx)("option",{value:!1,children:"Inactive"})]})]})}),(0,l.jsxs)("div",{className:"form-actions",children:[(0,l.jsx)("button",{type:"button",className:"btn btn-outline",onClick:M,children:"Cancel"}),(0,l.jsx)("button",{type:"submit",className:"btn btn-primary",disabled:h,children:h?"Saving...":f?"Update Class":"Create Class"})]})]})]}),(0,l.jsxs)("div",{className:"data-section",children:[(0,l.jsxs)("div",{className:"data-header",children:[(0,l.jsxs)("h3",{children:["Classes (",r.length,")"]}),(0,l.jsx)("div",{className:"data-actions",children:(0,l.jsx)("button",{className:"btn btn-outline btn-sm",onClick:()=>{S.current={data:null,ts:0},console.log("Refresh button clicked with:",{selectedCourseType:x,selectedCourse:j,courseTypes:u.length}),q(x,j)},disabled:h,children:"Refresh"})})]}),h?(0,l.jsxs)("div",{className:"loading-state",children:[(0,l.jsx)("div",{className:"loading-spinner"}),(0,l.jsx)("p",{children:"Loading classes..."})]}):0===r.length?(0,l.jsxs)("div",{className:"empty-state",children:[(0,l.jsx)("div",{className:"empty-icon",children:"No Classes"}),(0,l.jsx)("h4",{children:"No Classes Found"}),(0,l.jsx)("p",{children:j?"No classes found for the selected course. Create your first class for this course.":x?"No classes found for the selected course type. Create your first class.":"No classes found. Create your first class."}),(0,l.jsx)("button",{className:"btn btn-primary",onClick:()=>g(!0),children:"Add Class"})]}):(0,l.jsx)("div",{className:"data-grid",children:Array.isArray(r)?r.map(e=>{const s=[{key:"courseTypeName",label:"Course Type",value:e=>{var s,r,a,t;return(null===(s=e.course)||void 0===s?void 0:s.courseTypeName)||e.courseTypeName||B((null===(r=e.course)||void 0===r||null===(a=r.courseType)||void 0===a?void 0:a.id)||(null===(t=e.courseType)||void 0===t?void 0:t.id)||e.courseTypeId)}},{key:"courseName",label:"Course",value:e=>{var s;return e.courseName||(e=>{if(!Array.isArray(G))return console.warn("coursesByType is not an array:",G),"Unknown";const s=G.find(s=>s.id===e);return s?s.name:"Unknown"})((null===(s=e.course)||void 0===s?void 0:s.id)||e.courseId)}}];return(0,l.jsx)(i,{item:e,itemType:"class",onEdit:L,onDelete:_,fields:s},e.id)}):(0,l.jsxs)("div",{className:"empty-state",children:[(0,l.jsx)("div",{className:"empty-icon",children:"Error"}),(0,l.jsx)("h4",{children:"Data Loading Error"}),(0,l.jsx)("p",{children:"Classes data is not in the expected format. Please refresh the page."})]})})]})]})}}}]);
//# sourceMappingURL=716.1fea9930.chunk.js.map